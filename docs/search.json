[
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Slides",
    "section": "",
    "text": "Linéaments du territoire\nGrammaire des graphiques\nDonnées spatiales\n\n\nCouleurs du continu\nCartes Choroplèthes"
  },
  {
    "objectID": "programme/indices.html",
    "href": "programme/indices.html",
    "title": "Indices",
    "section": "",
    "text": "Vous avez construit un modèle. Il est certainement faux (ils le sont tous). Mais peut-être est-il utile. L’objet de cette séance est de vous donner un certain nombre de clefs pour répondre à ces deux questions : à quel point mon modèle est-il faux ? Sert-il à quelque chose ? Par modèle, on entend ces machines plus ou moins compliquées que les statisticiens fabriquent pour faire des prédictions à partir d’un faisceau d’indices. Les sciences sociales, peu concernées par les prédictions, utilisent plus couramment les modèles pour tester l’existence d’un lien de causalité entre deux phénomènes. On s’appuiera sur la séance précédente pour présenter la version bayésienne de modèles simples, pour des tâches de régression (nombre de personnes qui voteront pour X aux prochaines élections) et de classification (probabilité que X soit élu). On montrera comment évaluer la qualité des prédictions faites par ces modèles."
  },
  {
    "objectID": "programme/incertitude.html",
    "href": "programme/incertitude.html",
    "title": "Incertitude",
    "section": "",
    "text": "Au cours de l’année 1961, dans un bâtiment de l’Université de Yale, 26 personnes, sur 40, acceptèrent d’infliger des chocs électriques d’intensité croissante à une personne cardiaque qui les suppliait d’arrêter. Les gémissements étaient pré-enregistrés, les chocs imaginaires. Il s’agissait d’une expérience, qui eût un immense retentissement. Supposons un instant que ces 40 personnes, recrutées dans le Connecticut au début des années 1960, soient représentatives d’un “être humain moyen”. Quelle est la probabilité qu’une personne prise au hasard dans la rue fasse la même chose ? Les statistiques bayésiennes vous autorisent à poser ce genre de questions, et à y répondre précisément. Elles permettent aussi de prendre en compte les informations que vous pouvez avoir par ailleurs, et d’affiner vos croyances au fur et à mesure que vous recueillez davantage d’informations. Intuitive et amusante, cette approche se développe rapidement, et bénéficie d’excellentes implémentations en R, Python et Julia. Dans cette séance, on présente les principes fondamentaux des statistiques bayésiennes, et on introduit, de manière simple et accessible, les Méthodes de Monte Carlo par Chaînes de Markov (en anglais : MCMC).\nPrérequis : Des connaissances élémentaires en probabilités sont requises pour profiter pleinement de cette séance. Pour les personnes qui en sont dépourvues, il suffira de lire un ou deux chapitres de manuel en amont."
  },
  {
    "objectID": "programme/sequences.html",
    "href": "programme/sequences.html",
    "title": "Séquences",
    "section": "",
    "text": "R. est né en 1946. De ses 14 à ses 35 ans, il a travaillé gratuitement sur la ferme familiale. Puis il a été exploitant agricole en titre, jusqu’à sa retraite, à 56 ans. Combien de trajectoires ressemblent à celle de R. ? Cette question est du ressort d’une famille de méthodes, l’analyse de séquences, dont le représentant le plus connu est l’appariement optimal (Optimal Matching). L’unité de base de cette méthode est une séquence, c’est à dire une suite d’éléments ordonnés : une carrière professionnelle, l’emploi du temps d’un jour, une phrase, une danse. Pour calculer la distance entre deux séquences, les algorithmes comptent le nombre minimum d’opérations élémentaires (insertion, suppression, substitution) nécessaires pour passer d’une séquence à l’autre. À partir de la matrice de distances obtenue, il est possible de faire des typologies de séquences. La mise en oeuvre et l’interprétation des résultats avec R est particulièrement simple. L’essentiel des tâtonnements se situe en amont : comment recoder mes données pour que les composantes élémentaires de chaque séquence traduisent le plus précisément possible la question que je me pose ? Quel “coût” assigner à la substitution d’une portion de séquence à une autre ? On explorera ces questions avec deux enquêtes : l’une sur les carrières professionnelles, l’autre sur les emplois du temps."
  },
  {
    "objectID": "programme/lineaments.html",
    "href": "programme/lineaments.html",
    "title": "Linéaments du territoire",
    "section": "",
    "text": "Un jour vous voudrez faire une carte. Toute simple : la disposition d’un hameau, une scène de crime, le voyage d’un marin des Marquises à Moscou. Trois types d’outils s’offriront à vous : papier-crayon, logiciel spécialisé ou langage de data science généraliste. Nous explorerons cette troisième possibilité, et nous verrons que quelques lignes de code (R, Python ou Julia) suffisent à cartographier un nombre déconcertant de phénomènes. Dans la partie terre à terre du cours, on traitera des sujets suivants. Où trouver des informations géographiques structurées ? Comment les données spatiales sont-elles représentées (modèles vectoriel et raster) ? Quelles transformations peut-on leur faire subir ? Avec quels outils (langages, logiciels, packages) les manipuler ? Trois ouvrages, trois enquêtes, en Mongolie, en Jamaïque et en France, nous serviront de fils rouges. Ils nous poseront des questions non moins intéressantes. Comment représenter les territoires vécus ? Les fonds de cartes font-ils seulement tapisserie ? Comment cartographier l’éphémère, le clandestin ?"
  },
  {
    "objectID": "choropleth-maps.html#packages",
    "href": "choropleth-maps.html#packages",
    "title": "Choropleth maps",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(classInt)\nlibrary(rcartocolor)\nlibrary(colorBlindness)\nlibrary(ggspatial)"
  },
  {
    "objectID": "choropleth-maps.html#data",
    "href": "choropleth-maps.html#data",
    "title": "Choropleth maps",
    "section": "Data",
    "text": "Data\nVerbalisations pour non respect du confinement\n\nverbalisations = read_csv(\"data/verbalisations_departement.csv\")\n\n\nPopulation adulte et population totale\n\npopulation = read_csv(\"data/population_departement.csv\")\n\n\n\nPoliciers municipaux en 2020\n\npoliciers = read_csv(\"data/policiers_municipaux_departements.csv\")\n\n\n\nVoisins vigilants en mai 2020\n\nvigilants = read_csv(\"data/vigilants_departements.csv\")\n\n\n\nContours des départements\n\ndepartements_sf = st_read(\"data/departements.gpkg\", quiet = TRUE)"
  },
  {
    "objectID": "choropleth-maps.html#sources",
    "href": "choropleth-maps.html#sources",
    "title": "Choropleth maps",
    "section": "Sources",
    "text": "Sources\n\nVerbalisations\nPopulation\nPoliciers municipaux\nVoisins vigilants\nContours des départements"
  },
  {
    "objectID": "choropleth-maps.html#fines",
    "href": "choropleth-maps.html#fines",
    "title": "Choropleth maps",
    "section": "Fines",
    "text": "Fines\n\nverbalisations\n\n# A tibble: 101 × 2\n   code  verbalisations\n   &lt;chr&gt;          &lt;dbl&gt;\n 1 01              8036\n 2 02             11532\n 3 03              3820\n 4 04              2341\n 5 05              1974\n 6 06             40480\n 7 07              3939\n 8 08              4032\n 9 09              2468\n10 10              5212\n# ℹ 91 more rows"
  },
  {
    "objectID": "choropleth-maps.html#population",
    "href": "choropleth-maps.html#population",
    "title": "Choropleth maps",
    "section": "Population",
    "text": "Population\n\npopulation\n\n# A tibble: 101 × 3\n   code  pop_adulte pop_totale\n   &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 01        528411     657856\n 2 02        431728     529374\n 3 03        285728     335628\n 4 04        139754     165451\n 5 05        118744     140605\n 6 06        925569    1097410\n 7 07        275785     329325\n 8 08        222569     269701\n 9 09        130458     153954\n10 10        255060     311435\n# ℹ 91 more rows"
  },
  {
    "objectID": "choropleth-maps.html#how-to-merge",
    "href": "choropleth-maps.html#how-to-merge",
    "title": "Choropleth maps",
    "section": "How to merge ?",
    "text": "How to merge ?\n\n\n\n\n\n\ncodeverbalisations\n\n018036\n\n0211532\n\n033820\n\n042341\n\n051974\n\n0640480\n\n073939\n\n084032\n\n092468\n\n\n\n\n\n\n\n\n\ncodepop_adultepop_totale\n\n01528411657856\n\n02431728529374\n\n03285728335628\n\n04139754165451\n\n05118744140605\n\n069255691097410\n\n07275785329325\n\n08222569269701\n\n09130458153954"
  },
  {
    "objectID": "choropleth-maps.html#a-common-key",
    "href": "choropleth-maps.html#a-common-key",
    "title": "Choropleth maps",
    "section": "A common key",
    "text": "A common key\n\n\n\n\n\n\ncodeverbalisations\n\n018036\n\n0211532\n\n033820\n\n042341\n\n051974\n\n0640480\n\n073939\n\n084032\n\n092468\n\n\n\n\n\n\n\n\n\ncodepop_adultepop_totale\n\n01528411657856\n\n02431728529374\n\n03285728335628\n\n04139754165451\n\n05118744140605\n\n069255691097410\n\n07275785329325\n\n08222569269701\n\n09130458153954"
  },
  {
    "objectID": "choropleth-maps.html#syntax",
    "href": "choropleth-maps.html#syntax",
    "title": "Choropleth maps",
    "section": "Syntax",
    "text": "Syntax\n\nleft_join(verbalisations, population, by = \"code\")\n\n# A tibble: 101 × 4\n   code  verbalisations pop_adulte pop_totale\n   &lt;chr&gt;          &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 01              8036     528411     657856\n 2 02             11532     431728     529374\n 3 03              3820     285728     335628\n 4 04              2341     139754     165451\n 5 05              1974     118744     140605\n 6 06             40480     925569    1097410\n 7 07              3939     275785     329325\n 8 08              4032     222569     269701\n 9 09              2468     130458     153954\n10 10              5212     255060     311435\n# ℹ 91 more rows"
  },
  {
    "objectID": "choropleth-maps.html#principle",
    "href": "choropleth-maps.html#principle",
    "title": "Choropleth maps",
    "section": "Principle",
    "text": "Principle"
  },
  {
    "objectID": "choropleth-maps.html#polygons",
    "href": "choropleth-maps.html#polygons",
    "title": "Choropleth maps",
    "section": "Polygons",
    "text": "Polygons\n\ndepartements_sf\n\nSimple feature collection with 101 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -5.141277 ymin: 40.28472 xmax: 9.559956 ymax: 51.08899\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   code                     nom                           geom\n1    01                     Ain MULTIPOLYGON (((5.897201 46...\n2    02                   Aisne MULTIPOLYGON (((3.687477 49...\n3    03                  Allier MULTIPOLYGON (((2.385871 46...\n4    04 Alpes-de-Haute-Provence MULTIPOLYGON (((6.66765 43....\n5    05            Hautes-Alpes MULTIPOLYGON (((6.641667 44...\n6    06         Alpes-Maritimes MULTIPOLYGON (((7.329573 43...\n7    07                 Ardèche MULTIPOLYGON (((4.288497 44...\n8    08                Ardennes MULTIPOLYGON (((5.308547 49...\n9    09                  Ariège MULTIPOLYGON (((1.493896 42...\n10   10                    Aube MULTIPOLYGON (((3.650654 48..."
  },
  {
    "objectID": "choropleth-maps.html#map",
    "href": "choropleth-maps.html#map",
    "title": "Choropleth maps",
    "section": "Map",
    "text": "Map\n\nggplot(departements_sf) +\n  geom_sf()"
  },
  {
    "objectID": "choropleth-maps.html#same-principle",
    "href": "choropleth-maps.html#same-principle",
    "title": "Choropleth maps",
    "section": "Same principle",
    "text": "Same principle\n\nleft_join(departements_sf, verbalisations, by = \"code\")\n\nSimple feature collection with 101 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -5.141277 ymin: 40.28472 xmax: 9.559956 ymax: 51.08899\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   code                     nom verbalisations                           geom\n1    01                     Ain           8036 MULTIPOLYGON (((5.897201 46...\n2    02                   Aisne          11532 MULTIPOLYGON (((3.687477 49...\n3    03                  Allier           3820 MULTIPOLYGON (((2.385871 46...\n4    04 Alpes-de-Haute-Provence           2341 MULTIPOLYGON (((6.66765 43....\n5    05            Hautes-Alpes           1974 MULTIPOLYGON (((6.641667 44...\n6    06         Alpes-Maritimes          40480 MULTIPOLYGON (((7.329573 43...\n7    07                 Ardèche           3939 MULTIPOLYGON (((4.288497 44...\n8    08                Ardennes           4032 MULTIPOLYGON (((5.308547 49...\n9    09                  Ariège           2468 MULTIPOLYGON (((1.493896 42...\n10   10                    Aube           5212 MULTIPOLYGON (((3.650654 48..."
  },
  {
    "objectID": "choropleth-maps.html#mutate",
    "href": "choropleth-maps.html#mutate",
    "title": "Choropleth maps",
    "section": "Mutate",
    "text": "Mutate\n\ndepartements = left_join(departements_sf, verbalisations, by = \"code\") |&gt; \n  left_join(population, by = \"code\") |&gt; \n  mutate(verbalisations_pmla = verbalisations / pop_adulte * 1000)"
  },
  {
    "objectID": "choropleth-maps.html#inspect",
    "href": "choropleth-maps.html#inspect",
    "title": "Choropleth maps",
    "section": "Inspect",
    "text": "Inspect\n\ndepartements\n\nSimple feature collection with 101 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -5.141277 ymin: 40.28472 xmax: 9.559956 ymax: 51.08899\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   code                     nom verbalisations pop_adulte pop_totale\n1    01                     Ain           8036     528411     657856\n2    02                   Aisne          11532     431728     529374\n3    03                  Allier           3820     285728     335628\n4    04 Alpes-de-Haute-Provence           2341     139754     165451\n5    05            Hautes-Alpes           1974     118744     140605\n6    06         Alpes-Maritimes          40480     925569    1097410\n7    07                 Ardèche           3939     275785     329325\n8    08                Ardennes           4032     222569     269701\n9    09                  Ariège           2468     130458     153954\n10   10                    Aube           5212     255060     311435\n                             geom verbalisations_pmla\n1  MULTIPOLYGON (((5.897201 46...            15.20786\n2  MULTIPOLYGON (((3.687477 49...            26.71126\n3  MULTIPOLYGON (((2.385871 46...            13.36936\n4  MULTIPOLYGON (((6.66765 43....            16.75086\n5  MULTIPOLYGON (((6.641667 44...            16.62400\n6  MULTIPOLYGON (((7.329573 43...            43.73526\n7  MULTIPOLYGON (((4.288497 44...            14.28287\n8  MULTIPOLYGON (((5.308547 49...            18.11573\n9  MULTIPOLYGON (((1.493896 42...            18.91797\n10 MULTIPOLYGON (((3.650654 48...            20.43441"
  },
  {
    "objectID": "choropleth-maps.html#summary",
    "href": "choropleth-maps.html#summary",
    "title": "Choropleth maps",
    "section": "Summary",
    "text": "Summary\n\nsummary(departements$verbalisations_pmla)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  9.346  13.860  17.707  19.152  21.355  54.600"
  },
  {
    "objectID": "choropleth-maps.html#boxplot",
    "href": "choropleth-maps.html#boxplot",
    "title": "Choropleth maps",
    "section": "Boxplot",
    "text": "Boxplot\n\nggplot(departements, aes(y = verbalisations_pmla)) +\n  geom_boxplot()"
  },
  {
    "objectID": "choropleth-maps.html#histogram",
    "href": "choropleth-maps.html#histogram",
    "title": "Choropleth maps",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(departements, aes(x = verbalisations_pmla)) +\n  geom_histogram()"
  },
  {
    "objectID": "choropleth-maps.html#density",
    "href": "choropleth-maps.html#density",
    "title": "Choropleth maps",
    "section": "Density",
    "text": "Density\n\nggplot(departements, aes(x = verbalisations_pmla)) +\n  geom_density()"
  },
  {
    "objectID": "choropleth-maps.html#bar",
    "href": "choropleth-maps.html#bar",
    "title": "Choropleth maps",
    "section": "Bar",
    "text": "Bar\n\nggplot(departements, aes(x = nom, y = verbalisations_pmla))+\n  geom_bar(stat = \"identity\")"
  },
  {
    "objectID": "choropleth-maps.html#better-bar",
    "href": "choropleth-maps.html#better-bar",
    "title": "Choropleth maps",
    "section": "Better bar",
    "text": "Better bar"
  },
  {
    "objectID": "choropleth-maps.html#sf",
    "href": "choropleth-maps.html#sf",
    "title": "Choropleth maps",
    "section": "sf",
    "text": "sf\n\nggplot(departements, aes(fill = verbalisations_pmla)) +\n  geom_sf()"
  },
  {
    "objectID": "choropleth-maps.html#color-names",
    "href": "choropleth-maps.html#color-names",
    "title": "Choropleth maps",
    "section": "Color names",
    "text": "Color names\n\ncolors()\n\n  [1] \"white\"                \"aliceblue\"            \"antiquewhite\"        \n  [4] \"antiquewhite1\"        \"antiquewhite2\"        \"antiquewhite3\"       \n  [7] \"antiquewhite4\"        \"aquamarine\"           \"aquamarine1\"         \n [10] \"aquamarine2\"          \"aquamarine3\"          \"aquamarine4\"         \n [13] \"azure\"                \"azure1\"               \"azure2\"              \n [16] \"azure3\"               \"azure4\"               \"beige\"               \n [19] \"bisque\"               \"bisque1\"              \"bisque2\"             \n [22] \"bisque3\"              \"bisque4\"              \"black\"               \n [25] \"blanchedalmond\"       \"blue\"                 \"blue1\"               \n [28] \"blue2\"                \"blue3\"                \"blue4\"               \n [31] \"blueviolet\"           \"brown\"                \"brown1\"              \n [34] \"brown2\"               \"brown3\"               \"brown4\"              \n [37] \"burlywood\"            \"burlywood1\"           \"burlywood2\"          \n [40] \"burlywood3\"           \"burlywood4\"           \"cadetblue\"           \n [43] \"cadetblue1\"           \"cadetblue2\"           \"cadetblue3\"          \n [46] \"cadetblue4\"           \"chartreuse\"           \"chartreuse1\"         \n [49] \"chartreuse2\"          \"chartreuse3\"          \"chartreuse4\"         \n [52] \"chocolate\"            \"chocolate1\"           \"chocolate2\"          \n [55] \"chocolate3\"           \"chocolate4\"           \"coral\"               \n [58] \"coral1\"               \"coral2\"               \"coral3\"              \n [61] \"coral4\"               \"cornflowerblue\"       \"cornsilk\"            \n [64] \"cornsilk1\"            \"cornsilk2\"            \"cornsilk3\"           \n [67] \"cornsilk4\"            \"cyan\"                 \"cyan1\"               \n [70] \"cyan2\"                \"cyan3\"                \"cyan4\"               \n [73] \"darkblue\"             \"darkcyan\"             \"darkgoldenrod\"       \n [76] \"darkgoldenrod1\"       \"darkgoldenrod2\"       \"darkgoldenrod3\"      \n [79] \"darkgoldenrod4\"       \"darkgray\"             \"darkgreen\"           \n [82] \"darkgrey\"             \"darkkhaki\"            \"darkmagenta\"         \n [85] \"darkolivegreen\"       \"darkolivegreen1\"      \"darkolivegreen2\"     \n [88] \"darkolivegreen3\"      \"darkolivegreen4\"      \"darkorange\"          \n [91] \"darkorange1\"          \"darkorange2\"          \"darkorange3\"         \n [94] \"darkorange4\"          \"darkorchid\"           \"darkorchid1\"         \n [97] \"darkorchid2\"          \"darkorchid3\"          \"darkorchid4\"         \n[100] \"darkred\"              \"darksalmon\"           \"darkseagreen\"        \n[103] \"darkseagreen1\"        \"darkseagreen2\"        \"darkseagreen3\"       \n[106] \"darkseagreen4\"        \"darkslateblue\"        \"darkslategray\"       \n[109] \"darkslategray1\"       \"darkslategray2\"       \"darkslategray3\"      \n[112] \"darkslategray4\"       \"darkslategrey\"        \"darkturquoise\"       \n[115] \"darkviolet\"           \"deeppink\"             \"deeppink1\"           \n[118] \"deeppink2\"            \"deeppink3\"            \"deeppink4\"           \n[121] \"deepskyblue\"          \"deepskyblue1\"         \"deepskyblue2\"        \n[124] \"deepskyblue3\"         \"deepskyblue4\"         \"dimgray\"             \n[127] \"dimgrey\"              \"dodgerblue\"           \"dodgerblue1\"         \n[130] \"dodgerblue2\"          \"dodgerblue3\"          \"dodgerblue4\"         \n[133] \"firebrick\"            \"firebrick1\"           \"firebrick2\"          \n[136] \"firebrick3\"           \"firebrick4\"           \"floralwhite\"         \n[139] \"forestgreen\"          \"gainsboro\"            \"ghostwhite\"          \n[142] \"gold\"                 \"gold1\"                \"gold2\"               \n[145] \"gold3\"                \"gold4\"                \"goldenrod\"           \n[148] \"goldenrod1\"           \"goldenrod2\"           \"goldenrod3\"          \n[151] \"goldenrod4\"           \"gray\"                 \"gray0\"               \n[154] \"gray1\"                \"gray2\"                \"gray3\"               \n[157] \"gray4\"                \"gray5\"                \"gray6\"               \n[160] \"gray7\"                \"gray8\"                \"gray9\"               \n[163] \"gray10\"               \"gray11\"               \"gray12\"              \n[166] \"gray13\"               \"gray14\"               \"gray15\"              \n[169] \"gray16\"               \"gray17\"               \"gray18\"              \n[172] \"gray19\"               \"gray20\"               \"gray21\"              \n[175] \"gray22\"               \"gray23\"               \"gray24\"              \n[178] \"gray25\"               \"gray26\"               \"gray27\"              \n[181] \"gray28\"               \"gray29\"               \"gray30\"              \n[184] \"gray31\"               \"gray32\"               \"gray33\"              \n[187] \"gray34\"               \"gray35\"               \"gray36\"              \n[190] \"gray37\"               \"gray38\"               \"gray39\"              \n[193] \"gray40\"               \"gray41\"               \"gray42\"              \n[196] \"gray43\"               \"gray44\"               \"gray45\"              \n[199] \"gray46\"               \"gray47\"               \"gray48\"              \n[202] \"gray49\"               \"gray50\"               \"gray51\"              \n[205] \"gray52\"               \"gray53\"               \"gray54\"              \n[208] \"gray55\"               \"gray56\"               \"gray57\"              \n[211] \"gray58\"               \"gray59\"               \"gray60\"              \n[214] \"gray61\"               \"gray62\"               \"gray63\"              \n[217] \"gray64\"               \"gray65\"               \"gray66\"              \n[220] \"gray67\"               \"gray68\"               \"gray69\"              \n[223] \"gray70\"               \"gray71\"               \"gray72\"              \n[226] \"gray73\"               \"gray74\"               \"gray75\"              \n[229] \"gray76\"               \"gray77\"               \"gray78\"              \n[232] \"gray79\"               \"gray80\"               \"gray81\"              \n[235] \"gray82\"               \"gray83\"               \"gray84\"              \n[238] \"gray85\"               \"gray86\"               \"gray87\"              \n[241] \"gray88\"               \"gray89\"               \"gray90\"              \n[244] \"gray91\"               \"gray92\"               \"gray93\"              \n[247] \"gray94\"               \"gray95\"               \"gray96\"              \n[250] \"gray97\"               \"gray98\"               \"gray99\"              \n[253] \"gray100\"              \"green\"                \"green1\"              \n[256] \"green2\"               \"green3\"               \"green4\"              \n[259] \"greenyellow\"          \"grey\"                 \"grey0\"               \n[262] \"grey1\"                \"grey2\"                \"grey3\"               \n[265] \"grey4\"                \"grey5\"                \"grey6\"               \n[268] \"grey7\"                \"grey8\"                \"grey9\"               \n[271] \"grey10\"               \"grey11\"               \"grey12\"              \n[274] \"grey13\"               \"grey14\"               \"grey15\"              \n[277] \"grey16\"               \"grey17\"               \"grey18\"              \n[280] \"grey19\"               \"grey20\"               \"grey21\"              \n[283] \"grey22\"               \"grey23\"               \"grey24\"              \n[286] \"grey25\"               \"grey26\"               \"grey27\"              \n[289] \"grey28\"               \"grey29\"               \"grey30\"              \n[292] \"grey31\"               \"grey32\"               \"grey33\"              \n[295] \"grey34\"               \"grey35\"               \"grey36\"              \n[298] \"grey37\"               \"grey38\"               \"grey39\"              \n[301] \"grey40\"               \"grey41\"               \"grey42\"              \n[304] \"grey43\"               \"grey44\"               \"grey45\"              \n[307] \"grey46\"               \"grey47\"               \"grey48\"              \n[310] \"grey49\"               \"grey50\"               \"grey51\"              \n[313] \"grey52\"               \"grey53\"               \"grey54\"              \n[316] \"grey55\"               \"grey56\"               \"grey57\"              \n[319] \"grey58\"               \"grey59\"               \"grey60\"              \n[322] \"grey61\"               \"grey62\"               \"grey63\"              \n[325] \"grey64\"               \"grey65\"               \"grey66\"              \n[328] \"grey67\"               \"grey68\"               \"grey69\"              \n[331] \"grey70\"               \"grey71\"               \"grey72\"              \n[334] \"grey73\"               \"grey74\"               \"grey75\"              \n[337] \"grey76\"               \"grey77\"               \"grey78\"              \n[340] \"grey79\"               \"grey80\"               \"grey81\"              \n[343] \"grey82\"               \"grey83\"               \"grey84\"              \n[346] \"grey85\"               \"grey86\"               \"grey87\"              \n[349] \"grey88\"               \"grey89\"               \"grey90\"              \n[352] \"grey91\"               \"grey92\"               \"grey93\"              \n[355] \"grey94\"               \"grey95\"               \"grey96\"              \n[358] \"grey97\"               \"grey98\"               \"grey99\"              \n[361] \"grey100\"              \"honeydew\"             \"honeydew1\"           \n[364] \"honeydew2\"            \"honeydew3\"            \"honeydew4\"           \n[367] \"hotpink\"              \"hotpink1\"             \"hotpink2\"            \n[370] \"hotpink3\"             \"hotpink4\"             \"indianred\"           \n[373] \"indianred1\"           \"indianred2\"           \"indianred3\"          \n[376] \"indianred4\"           \"ivory\"                \"ivory1\"              \n[379] \"ivory2\"               \"ivory3\"               \"ivory4\"              \n[382] \"khaki\"                \"khaki1\"               \"khaki2\"              \n[385] \"khaki3\"               \"khaki4\"               \"lavender\"            \n[388] \"lavenderblush\"        \"lavenderblush1\"       \"lavenderblush2\"      \n[391] \"lavenderblush3\"       \"lavenderblush4\"       \"lawngreen\"           \n[394] \"lemonchiffon\"         \"lemonchiffon1\"        \"lemonchiffon2\"       \n[397] \"lemonchiffon3\"        \"lemonchiffon4\"        \"lightblue\"           \n[400] \"lightblue1\"           \"lightblue2\"           \"lightblue3\"          \n[403] \"lightblue4\"           \"lightcoral\"           \"lightcyan\"           \n[406] \"lightcyan1\"           \"lightcyan2\"           \"lightcyan3\"          \n[409] \"lightcyan4\"           \"lightgoldenrod\"       \"lightgoldenrod1\"     \n[412] \"lightgoldenrod2\"      \"lightgoldenrod3\"      \"lightgoldenrod4\"     \n[415] \"lightgoldenrodyellow\" \"lightgray\"            \"lightgreen\"          \n[418] \"lightgrey\"            \"lightpink\"            \"lightpink1\"          \n[421] \"lightpink2\"           \"lightpink3\"           \"lightpink4\"          \n[424] \"lightsalmon\"          \"lightsalmon1\"         \"lightsalmon2\"        \n[427] \"lightsalmon3\"         \"lightsalmon4\"         \"lightseagreen\"       \n[430] \"lightskyblue\"         \"lightskyblue1\"        \"lightskyblue2\"       \n[433] \"lightskyblue3\"        \"lightskyblue4\"        \"lightslateblue\"      \n[436] \"lightslategray\"       \"lightslategrey\"       \"lightsteelblue\"      \n[439] \"lightsteelblue1\"      \"lightsteelblue2\"      \"lightsteelblue3\"     \n[442] \"lightsteelblue4\"      \"lightyellow\"          \"lightyellow1\"        \n[445] \"lightyellow2\"         \"lightyellow3\"         \"lightyellow4\"        \n[448] \"limegreen\"            \"linen\"                \"magenta\"             \n[451] \"magenta1\"             \"magenta2\"             \"magenta3\"            \n[454] \"magenta4\"             \"maroon\"               \"maroon1\"             \n[457] \"maroon2\"              \"maroon3\"              \"maroon4\"             \n[460] \"mediumaquamarine\"     \"mediumblue\"           \"mediumorchid\"        \n[463] \"mediumorchid1\"        \"mediumorchid2\"        \"mediumorchid3\"       \n[466] \"mediumorchid4\"        \"mediumpurple\"         \"mediumpurple1\"       \n[469] \"mediumpurple2\"        \"mediumpurple3\"        \"mediumpurple4\"       \n[472] \"mediumseagreen\"       \"mediumslateblue\"      \"mediumspringgreen\"   \n[475] \"mediumturquoise\"      \"mediumvioletred\"      \"midnightblue\"        \n[478] \"mintcream\"            \"mistyrose\"            \"mistyrose1\"          \n[481] \"mistyrose2\"           \"mistyrose3\"           \"mistyrose4\"          \n[484] \"moccasin\"             \"navajowhite\"          \"navajowhite1\"        \n[487] \"navajowhite2\"         \"navajowhite3\"         \"navajowhite4\"        \n[490] \"navy\"                 \"navyblue\"             \"oldlace\"             \n[493] \"olivedrab\"            \"olivedrab1\"           \"olivedrab2\"          \n[496] \"olivedrab3\"           \"olivedrab4\"           \"orange\"              \n[499] \"orange1\"              \"orange2\"              \"orange3\"             \n[502] \"orange4\"              \"orangered\"            \"orangered1\"          \n[505] \"orangered2\"           \"orangered3\"           \"orangered4\"          \n[508] \"orchid\"               \"orchid1\"              \"orchid2\"             \n[511] \"orchid3\"              \"orchid4\"              \"palegoldenrod\"       \n[514] \"palegreen\"            \"palegreen1\"           \"palegreen2\"          \n[517] \"palegreen3\"           \"palegreen4\"           \"paleturquoise\"       \n[520] \"paleturquoise1\"       \"paleturquoise2\"       \"paleturquoise3\"      \n[523] \"paleturquoise4\"       \"palevioletred\"        \"palevioletred1\"      \n[526] \"palevioletred2\"       \"palevioletred3\"       \"palevioletred4\"      \n[529] \"papayawhip\"           \"peachpuff\"            \"peachpuff1\"          \n[532] \"peachpuff2\"           \"peachpuff3\"           \"peachpuff4\"          \n[535] \"peru\"                 \"pink\"                 \"pink1\"               \n[538] \"pink2\"                \"pink3\"                \"pink4\"               \n[541] \"plum\"                 \"plum1\"                \"plum2\"               \n[544] \"plum3\"                \"plum4\"                \"powderblue\"          \n[547] \"purple\"               \"purple1\"              \"purple2\"             \n[550] \"purple3\"              \"purple4\"              \"red\"                 \n[553] \"red1\"                 \"red2\"                 \"red3\"                \n[556] \"red4\"                 \"rosybrown\"            \"rosybrown1\"          \n[559] \"rosybrown2\"           \"rosybrown3\"           \"rosybrown4\"          \n[562] \"royalblue\"            \"royalblue1\"           \"royalblue2\"          \n[565] \"royalblue3\"           \"royalblue4\"           \"saddlebrown\"         \n[568] \"salmon\"               \"salmon1\"              \"salmon2\"             \n[571] \"salmon3\"              \"salmon4\"              \"sandybrown\"          \n[574] \"seagreen\"             \"seagreen1\"            \"seagreen2\"           \n[577] \"seagreen3\"            \"seagreen4\"            \"seashell\"            \n[580] \"seashell1\"            \"seashell2\"            \"seashell3\"           \n[583] \"seashell4\"            \"sienna\"               \"sienna1\"             \n[586] \"sienna2\"              \"sienna3\"              \"sienna4\"             \n[589] \"skyblue\"              \"skyblue1\"             \"skyblue2\"            \n[592] \"skyblue3\"             \"skyblue4\"             \"slateblue\"           \n[595] \"slateblue1\"           \"slateblue2\"           \"slateblue3\"          \n[598] \"slateblue4\"           \"slategray\"            \"slategray1\"          \n[601] \"slategray2\"           \"slategray3\"           \"slategray4\"          \n[604] \"slategrey\"            \"snow\"                 \"snow1\"               \n[607] \"snow2\"                \"snow3\"                \"snow4\"               \n[610] \"springgreen\"          \"springgreen1\"         \"springgreen2\"        \n[613] \"springgreen3\"         \"springgreen4\"         \"steelblue\"           \n[616] \"steelblue1\"           \"steelblue2\"           \"steelblue3\"          \n[619] \"steelblue4\"           \"tan\"                  \"tan1\"                \n[622] \"tan2\"                 \"tan3\"                 \"tan4\"                \n[625] \"thistle\"              \"thistle1\"             \"thistle2\"            \n[628] \"thistle3\"             \"thistle4\"             \"tomato\"              \n[631] \"tomato1\"              \"tomato2\"              \"tomato3\"             \n[634] \"tomato4\"              \"turquoise\"            \"turquoise1\"          \n[637] \"turquoise2\"           \"turquoise3\"           \"turquoise4\"          \n[640] \"violet\"               \"violetred\"            \"violetred1\"          \n[643] \"violetred2\"           \"violetred3\"           \"violetred4\"          \n[646] \"wheat\"                \"wheat1\"               \"wheat2\"              \n[649] \"wheat3\"               \"wheat4\"               \"whitesmoke\"          \n[652] \"yellow\"               \"yellow1\"              \"yellow2\"             \n[655] \"yellow3\"              \"yellow4\"              \"yellowgreen\"         \n\nlength(colors())\n\n[1] 657"
  },
  {
    "objectID": "choropleth-maps.html#aquamarine4",
    "href": "choropleth-maps.html#aquamarine4",
    "title": "Choropleth maps",
    "section": "aquamarine4",
    "text": "aquamarine4\n\nggplot(departements_sf) +\n  geom_sf(fill = \"aquamarine4\")"
  },
  {
    "objectID": "choropleth-maps.html#ff6347",
    "href": "choropleth-maps.html#ff6347",
    "title": "Choropleth maps",
    "section": "#FF6347",
    "text": "#FF6347\n\nggplot(departements_sf) +\n  geom_sf(fill = \"#FF6347\")"
  },
  {
    "objectID": "choropleth-maps.html#color-codes",
    "href": "choropleth-maps.html#color-codes",
    "title": "Choropleth maps",
    "section": "Color codes",
    "text": "Color codes\n\n\nHexadecimal symbols : 0:9, A:F.\nWhite : #FFFFFF\nBlack : #000000\nRed : #FF0000\nGreen : #00FF00\nBlue : #0000FF\nBrown : #A52A2A"
  },
  {
    "objectID": "choropleth-maps.html#sequential",
    "href": "choropleth-maps.html#sequential",
    "title": "Choropleth maps",
    "section": "Sequential",
    "text": "Sequential"
  },
  {
    "objectID": "choropleth-maps.html#discrete",
    "href": "choropleth-maps.html#discrete",
    "title": "Choropleth maps",
    "section": "Discrete",
    "text": "Discrete"
  },
  {
    "objectID": "choropleth-maps.html#diverging",
    "href": "choropleth-maps.html#diverging",
    "title": "Choropleth maps",
    "section": "Diverging",
    "text": "Diverging"
  },
  {
    "objectID": "choropleth-maps.html#r-packages",
    "href": "choropleth-maps.html#r-packages",
    "title": "Choropleth maps",
    "section": "R packages",
    "text": "R packages\n\n\nrcartocolor\nviridis\nscico\nwesanderson\nrtist"
  },
  {
    "objectID": "choropleth-maps.html#rainbow",
    "href": "choropleth-maps.html#rainbow",
    "title": "Choropleth maps",
    "section": "Rainbow",
    "text": "Rainbow\n\ncolorBlindness::displayAllColors(rainbow(6))"
  },
  {
    "objectID": "choropleth-maps.html#viridis",
    "href": "choropleth-maps.html#viridis",
    "title": "Choropleth maps",
    "section": "Viridis",
    "text": "Viridis\n\ncolorBlindness::displayAllColors(viridis::viridis(6))"
  },
  {
    "objectID": "choropleth-maps.html#antique",
    "href": "choropleth-maps.html#antique",
    "title": "Choropleth maps",
    "section": "Antique",
    "text": "Antique\n\ndisplayAllColors(rcartocolor::carto_pal(n = 6, name = \"Antique\"))"
  },
  {
    "objectID": "choropleth-maps.html#save-typing",
    "href": "choropleth-maps.html#save-typing",
    "title": "Choropleth maps",
    "section": "Save typing",
    "text": "Save typing\n\ndefault = ggplot(departements,\n                 aes(fill = verbalisations_pmla)) +\n  geom_sf() +\n  theme_void()"
  },
  {
    "objectID": "choropleth-maps.html#default",
    "href": "choropleth-maps.html#default",
    "title": "Choropleth maps",
    "section": "Default",
    "text": "Default\n\ndefault"
  },
  {
    "objectID": "choropleth-maps.html#fill-continuous",
    "href": "choropleth-maps.html#fill-continuous",
    "title": "Choropleth maps",
    "section": "Fill continuous",
    "text": "Fill continuous\n\ndefault + scale_fill_continuous()"
  },
  {
    "objectID": "choropleth-maps.html#gradient",
    "href": "choropleth-maps.html#gradient",
    "title": "Choropleth maps",
    "section": "Gradient",
    "text": "Gradient\n\ndefault + scale_fill_gradient(low = \"#132B43\", high = \"#56B1F7\")"
  },
  {
    "objectID": "choropleth-maps.html#red-gradient",
    "href": "choropleth-maps.html#red-gradient",
    "title": "Choropleth maps",
    "section": "Red Gradient",
    "text": "Red Gradient\n\ndefault + scale_fill_gradient(low = \"#43000D\", high = \"#F76A6A\")"
  },
  {
    "objectID": "choropleth-maps.html#viridis-1",
    "href": "choropleth-maps.html#viridis-1",
    "title": "Choropleth maps",
    "section": "Viridis",
    "text": "Viridis\n\ndefault + scale_fill_viridis_c()"
  },
  {
    "objectID": "choropleth-maps.html#viridis-magma",
    "href": "choropleth-maps.html#viridis-magma",
    "title": "Choropleth maps",
    "section": "Viridis magma",
    "text": "Viridis magma\n\ndefault + scale_fill_viridis_c(option = \"magma\")"
  },
  {
    "objectID": "choropleth-maps.html#viridis-inferno",
    "href": "choropleth-maps.html#viridis-inferno",
    "title": "Choropleth maps",
    "section": "Viridis inferno",
    "text": "Viridis inferno\n\ndefault + scale_fill_viridis_c(option = \"inferno\")"
  },
  {
    "objectID": "choropleth-maps.html#rcartocolor",
    "href": "choropleth-maps.html#rcartocolor",
    "title": "Choropleth maps",
    "section": "Rcartocolor",
    "text": "Rcartocolor\n\ndefault + scale_fill_carto_c(palette = \"SunsetDark\")"
  },
  {
    "objectID": "choropleth-maps.html#continuous-inferno",
    "href": "choropleth-maps.html#continuous-inferno",
    "title": "Choropleth maps",
    "section": "Continuous inferno",
    "text": "Continuous inferno\n\ndefault + scale_fill_viridis_c(option = \"inferno\")"
  },
  {
    "objectID": "choropleth-maps.html#binned-inferno",
    "href": "choropleth-maps.html#binned-inferno",
    "title": "Choropleth maps",
    "section": "Binned inferno",
    "text": "Binned inferno\n\ndefault + scale_fill_viridis_b(option = \"inferno\")"
  },
  {
    "objectID": "choropleth-maps.html#equal-intervals",
    "href": "choropleth-maps.html#equal-intervals",
    "title": "Choropleth maps",
    "section": "Equal intervals",
    "text": "Equal intervals\n\nequal = classIntervals(departements$verbalisations_pmla,\n                       n = 4, \n                       style = \"equal\")\nequal$brks\n\n[1]  9.346372 20.659784 31.973197 43.286609 54.600022"
  },
  {
    "objectID": "choropleth-maps.html#quantiles",
    "href": "choropleth-maps.html#quantiles",
    "title": "Choropleth maps",
    "section": "Quantiles",
    "text": "Quantiles\n\nquantile = classIntervals(departements$verbalisations_pmla,\n                          n = 4,\n                          style = \"quantile\")\nquantile$brks\n\n[1]  9.346372 13.859919 17.707087 21.354589 54.600022"
  },
  {
    "objectID": "choropleth-maps.html#boxplot-1",
    "href": "choropleth-maps.html#boxplot-1",
    "title": "Choropleth maps",
    "section": "Boxplot",
    "text": "Boxplot\n\nbox = classIntervals(departements$verbalisations_pmla,\n                     style = \"box\")\nbox$brks\n\n[1]      -Inf  2.617913 13.859919 17.707087 21.354589 32.596594 54.600022"
  },
  {
    "objectID": "choropleth-maps.html#tools",
    "href": "choropleth-maps.html#tools",
    "title": "Choropleth maps",
    "section": "Tools",
    "text": "Tools\n\n\nCode\nhtmp = ggplot(departements, \n              aes(x = fct_reorder(nom, verbalisations_pmla),\n                  y = 1,\n                  fill = verbalisations_pmla)) +\n  geom_raster() +\n  guides(fill = \"none\") +\n  theme_void() +\n  theme(aspect.ratio = 4/10)\n\n\n\n\nCode\npoints = ggplot(departements, aes(x = verbalisations_pmla,\n                                  y = 0)) +\n  geom_point(size = 4,\n             aes(\n               # alpha = verbalisations_pmla,\n               colour = verbalisations_pmla)) +\n  guides(colour = \"none\",\n         # alpha = \"none\"\n  ) +\n  ggrepel::geom_text_repel(aes(label = nom)) +\n  theme_void() +\n  theme(aspect.ratio = 4/10,\n        axis.line.x = element_line(),\n        axis.ticks.x = element_line(),\n        axis.text.x = element_text(),\n        axis.title.x = element_text())"
  },
  {
    "objectID": "choropleth-maps.html#continuous",
    "href": "choropleth-maps.html#continuous",
    "title": "Choropleth maps",
    "section": "Continuous",
    "text": "Continuous\n\npoints + scale_colour_viridis_c()"
  },
  {
    "objectID": "choropleth-maps.html#equal-intervals-1",
    "href": "choropleth-maps.html#equal-intervals-1",
    "title": "Choropleth maps",
    "section": "Equal intervals",
    "text": "Equal intervals\n\npoints + scale_colour_viridis_b(breaks = equal$brk)"
  },
  {
    "objectID": "choropleth-maps.html#quantiles-1",
    "href": "choropleth-maps.html#quantiles-1",
    "title": "Choropleth maps",
    "section": "Quantiles",
    "text": "Quantiles\n\npoints + scale_colour_viridis_b(breaks = quantile$brk)"
  },
  {
    "objectID": "choropleth-maps.html#boxplot-2",
    "href": "choropleth-maps.html#boxplot-2",
    "title": "Choropleth maps",
    "section": "Boxplot",
    "text": "Boxplot\n\npoints + scale_colour_viridis_b(breaks = box$brk)"
  },
  {
    "objectID": "choropleth-maps.html#equal-intervals-2",
    "href": "choropleth-maps.html#equal-intervals-2",
    "title": "Choropleth maps",
    "section": "Equal intervals",
    "text": "Equal intervals\n\ndefault + scale_fill_viridis_b(breaks = equal$brk)"
  },
  {
    "objectID": "choropleth-maps.html#quantiles-2",
    "href": "choropleth-maps.html#quantiles-2",
    "title": "Choropleth maps",
    "section": "Quantiles",
    "text": "Quantiles\n\ndefault + scale_fill_viridis_b(breaks = quantile$brk)"
  },
  {
    "objectID": "choropleth-maps.html#boxplot-3",
    "href": "choropleth-maps.html#boxplot-3",
    "title": "Choropleth maps",
    "section": "Boxplot",
    "text": "Boxplot\n\ndefault + scale_fill_viridis_b(breaks = box$brk)"
  },
  {
    "objectID": "choropleth-maps.html#problem",
    "href": "choropleth-maps.html#problem",
    "title": "Choropleth maps",
    "section": "Problem",
    "text": "Problem\n\nggplot(departements, aes(x = verbalisations_pmla)) +\n  geom_density()"
  },
  {
    "objectID": "choropleth-maps.html#headtail-breaks-algorithm",
    "href": "choropleth-maps.html#headtail-breaks-algorithm",
    "title": "Choropleth maps",
    "section": "Head/Tail breaks algorithm",
    "text": "Head/Tail breaks algorithm\nJiang, Bin. 2013. “Head/Tail Breaks: A New Classification Scheme for Data with a Heavy-Tailed Distribution.” The Professional Geographer 65 (3): 482–94.\n\n\nCompute mu = mean(var).\nBreak var into the tail (as var &lt; mu) and the head (as var &gt; mu).\nAssess if the proportion of head over var is lower or equal than a given threshold (i.e. length(head)/length(var) &lt;= thr)\nIf 3 is TRUE, repeat 1 to 3 until the condition is FALSE or no more partitions are possible (i.e. head has less than two elements expressed as length(head) &lt; 2)."
  },
  {
    "objectID": "choropleth-maps.html#implementation-in-classint",
    "href": "choropleth-maps.html#implementation-in-classint",
    "title": "Choropleth maps",
    "section": "Implementation in ClassInt",
    "text": "Implementation in ClassInt\n\nheadtails = classIntervals(departements$verbalisations_pmla,\n                           style = \"headtails\")\nheadtails$brks\n\n[1]  9.346372 19.152204 26.291928 54.600022"
  },
  {
    "objectID": "choropleth-maps.html#visualize",
    "href": "choropleth-maps.html#visualize",
    "title": "Choropleth maps",
    "section": "Visualize",
    "text": "Visualize\n\npoints + scale_colour_viridis_b(breaks = headtails$brk)"
  },
  {
    "objectID": "choropleth-maps.html#map-1",
    "href": "choropleth-maps.html#map-1",
    "title": "Choropleth maps",
    "section": "Map",
    "text": "Map\n\ndefault + scale_fill_viridis_b(breaks = headtails$brk)"
  },
  {
    "objectID": "choropleth-maps.html#legend",
    "href": "choropleth-maps.html#legend",
    "title": "Choropleth maps",
    "section": "Legend",
    "text": "Legend\n\n\nCode\ndefault + scale_fill_viridis_b(breaks = headtails$brk,\n                               labels = round) +\n  labs(fill = \"Verbalisations\\npour\\n1000 adultes\")"
  },
  {
    "objectID": "choropleth-maps.html#title",
    "href": "choropleth-maps.html#title",
    "title": "Choropleth maps",
    "section": "Title",
    "text": "Title\n\n\nCode\ndefault + scale_fill_viridis_b(breaks = headtails$brk,\n                               labels = round) +\n  labs(title = \"Verbalisations pour non-respect du confinement\",\n       subtitle = \"Entre le 17 mars et le 10 mai 2020\",\n       fill = \"Verbalisations\\npour\\n1000 adultes\",\n       caption = \"Source : ANTAI\")"
  },
  {
    "objectID": "choropleth-maps.html#north-arrow",
    "href": "choropleth-maps.html#north-arrow",
    "title": "Choropleth maps",
    "section": "North arrow",
    "text": "North arrow\n\n\nCode\ndefault + scale_fill_viridis_b(breaks = headtails$brk,\n                               labels = round) +\n  labs(title = \"Verbalisations pour non-respect du confinement\",\n       subtitle = \"Entre le 17 mars et le 10 mai 2020\",\n       fill = \"Verbalisations\\npour\\n1000 adultes\",\n       caption = \"Source : ANTAI\") +\n  annotation_north_arrow(style = north_arrow_nautical(),\n                         location = \"tl\")"
  },
  {
    "objectID": "choropleth-maps.html#scale-bar",
    "href": "choropleth-maps.html#scale-bar",
    "title": "Choropleth maps",
    "section": "Scale bar",
    "text": "Scale bar\n\n\nCode\ndefault + scale_fill_viridis_b(breaks = headtails$brk,\n                               labels = round) +\n  labs(title = \"Verbalisations pour non-respect du confinement\",\n       subtitle = \"Entre le 17 mars et le 10 mai 2020\",\n       fill = \"Verbalisations\\npour\\n1000 adultes\",\n       caption = \"Source : ANTAI\") +\n  annotation_north_arrow(style = north_arrow_nautical(),\n                         location = \"tl\") +\n  annotation_scale(location = \"br\")"
  },
  {
    "objectID": "exercices.html",
    "href": "exercices.html",
    "title": "Exercices",
    "section": "",
    "text": "Note\n\n\n\nL’exercice à faire avant le cours du 23 octobre est Google Mobility\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExcès de mortalité\n\n\n\n\n\n\nNiveau 2\n\n\n\nIdentifier les pays les plus touchés par la pandémie\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nLogements vacants\n\n\n\n\n\n\nNiveau 1\n\n\n\nCartographier les logements vides en France\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nÉlections législatives\n\n\n\n\n\n\nNiveau 3\n\n\n\nCartographier l’absention au premier tour des élections législatives anticipées de 2024\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nBombardements\n\n\n\n\n\n\nNiveau 3\n\n\n\nCartographier les bombardements américains pendant la guerre du Vietnam.\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nGoogle Mobility\n\n\n\n\n\n\nNiveau 2\n\n\n\nCartographier l’évolution de la mobilité durant la pandémie\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nVoisins vigilants\n\n\n\n\n\n\nNiveau 1\n\n\n\nCartographier la distribution des communautés de voisins vigilants en France\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "exercices/voisins-vigilants.html",
    "href": "exercices/voisins-vigilants.html",
    "title": "Voisins vigilants",
    "section": "",
    "text": "Contexte\nLes données sur les communautés de voisins vigilants ont été archivées grâce à la Wayback Machine et récoltées grâce au package rvest, dédié au webscraping.\n\n\n\n\n\n\nIncident\n\n\n\nSuite à une cyberattaque, la Wayback Machine est indisponible pour une durée indéterminée.\n\n\n\n\n\n\n\n\nBibliographie\n\n\n\nDeux références, pour les personnes intéressées : Elguezabal Eleonora, « Mon voisin est-il vigilant ou l’ami des gendarmes ? Participation citoyenne et extension du domaine sécuritaire », Monde commun, 25 février 2020, N° 4, nᵒ 1, p. 54‑71 & Gardenier Matthijs, « La communauté au service de la surveillance : capital social, lien social et figure de l’ennemi. Essai de typologie des “Voisins vigilants” », Revue européenne des sciences sociales, 2020, vol. 58‑2, nᵒ 2, p. 189‑216.\n\n\nLe fichier contenant les contours des départements a été récupéré grâce au package CARTElette et à sa fonction charger_carte, puis nettoyé.\nLes données sur la population départementale sont issues des estimations de population au premier janvier par sexe et âge, réalisées par l’INSEE. Elles ont également été nettoyées.\n\n\nImport\n\nAssurez vous d’avoir téléchargé les trois fichiers dans un sous-dossier data, que vous aurez créé à la racine du dossier correspondant à votre projet R.\nChargez les packages tidyverse et sf\nImportez les données sur la population de chaque département, avec la fonction read_csv.\nImportez de même les données sur le nombre de communautés de voisins vigilants par département.\nImportez les données géographiques à l’aide de la fonction st_read.\nQuel est le nombre et le type des variables contenues dans chaque jeu de données ? Quel est le nombre d’observations ?\n\n\n\n\n\n\n\nConseil\n\n\n\nAssurez vous d’assigner les trois jeux de données importés à des objets aux noms explicites, mais courts.\n\n\n\n\nJointure\nL’objectif est de réunir ces trois sources d’informations dans un jeu de données unique.\n\nCherchez s’il existe une variable présente dans les 3 jeux de données, qui pourrait servir de clé. Porte-elle partout le même nom ? Est-elle exactement identique d’un jeu de données à l’autre ?\nEn tapant ?left_join dans la console, consultez l’aide de la fonction left_join du package dplyr. Utilisez cette fonction pour réaliser la jointure.\n\n\n\nRecodage\nOn souhaite calculer la prévalence de la vigilance, pour chaque département.\n\nConsultez l’aide de la fonction mutate du package dplyr.\nUtilisez cette fonction pour ajouter à votre jeu de données une nouvelle variable, donnant le nombre de communautés de voisins vigilants pour 100 000 habitants adultes. C’est cette variable qui va désormais nous intéresser.\n\n\n\nDistribution\n\nQuelle est la moyenne, la médiane de votre nouvelle variable ? Quels sont les premier et troisième quartiles ? Son minimum et son maximum ? Vous pourrez utiliser la fonction summary.\nUtiliser les fonction geom_boxplot, geom_histogram et geom_density pour visualiser la distribution de la variable.\nUtilisez la fonction geom_sf pour obtenir une première cartographie.\nQu’est-il arrivé à la Corse ?\nChangez la palette de couleurs.\n\n\n\nDiscrétisation\nPour faire des cartes lisibles et efficaces, il est nécessaire de découper en tranches vos variables quantitatives.\n\nÉtant donné la distribution de votre variable, quel type de discrétisation vous semble a priori le plus adapté ?\nÀ l’aide de la fonction classInt::classIntervals, procédez à la discrétisation.\n\n\n\nCartographie\n\nCartographiez le nombre de voisins vigilants par département, pour 100 000 habitants adultes, en utilisant ces trois fonctions : ggplot, geom_sf et scale_fill_viridis_b.\nVariez les discrétisations.\nEssayez différentes palettes de couleurs."
  },
  {
    "objectID": "exercices/bombardements-vietnam.html",
    "href": "exercices/bombardements-vietnam.html",
    "title": "Bombardements",
    "section": "",
    "text": "Préparation\n\nChargez les packages suivants :\n\ntidyverse\nsf\nspatstat\n\nTéléchargez la base “Vietnam War THOR Data” (1.5 GB) sur le site data.world. Il faut préalabement créer un compte.\nParcourez rapidement la documentation.\nPour gagner du temps et de l’espace disque, convertissez le fichier csv en un fichier parquet (vous pourrez utiliser successivement les packages vroom et nanoparquet).\n\n\n\nFrontière des pays\nÀ l’aide du package giscoR, importez les polygones correspondant aux frontières du Laos, du Vietnam et du Cambodge dans un objet sf.\n\n\nfilter\nLa base THOR contient de nombreuses missions aériennes, en plus des bombardements, qui seuls nous intéressent. Pour sélectionner les missions de bombardement, on se servira des informations suivantes :\n\nnumweaponsdelivered non nul\nmfunc_desc_class différent de NONKINETIC\ntgtlatdd_ddd_wgs84 renseignée\n\nAfin d’accélérer les calculs ultérieurs, sélectionnez un échantillon aléatoire de 100 000 lignes. Vous pourrez utiliser la fonction slice_sample.\n\n\nConvertir en objet sf\n\nConvertissez le dataframe de 100 000 lignes obtenu en objet sf. Pour cela, vous pourrez utiliser la fonction st_as_sf du package sf, après avoir remarqué que la latitude et la longitude sont respectivement encodées dans les variables tgtlatdd_ddd_wgs84 et tgtlonddd_ddd_wgs84.\nAssurez vous que le Coordinate Reference System (CRS) de l’objet sf obtenu est le même que celui des polygones des pays.\nConservez uniquement les bombardements dont la localisation est incluse dans les frontières des trois pays. Vous pourrez utiliser la fonction st_intersection.\n\n\n\nSemis de points\nCartographiez les bombardements en utilisant le package ggplot. Vous pourrez jouer sur la taille et la transparence des points pour obtenir une carte lisible.\n\n\nGrille\nL’objectif de cette partie de l’exercice est de produire une carte plus synthétique, où l’intensité des bombardements apparaît dans les couleurs attribuées aux cellules d’une grille hexagonale.\n\nCréez une grille régulière correspondant à l’emprise spatiale du Cambodge, du Vietnam et du Laos. Vous pourrez utiliser la fonction sf::st_make_grid. Visualisez la avec ggplot.\nCréez un nouvel objet sf, par l’intersection de cette grille et des polygones des pays. Vous pourrez utiliser la fonction sf::st_intersection. Visualisez avec ggplot l’objet ainsi obtenu.\nRéalisez une jointure spatiale entre l’objet sf contenant les bombardements et l’objet sf que vous venez de créer. L’objectif est que chaque bombardement appartienne désormais à une cellule de la grille.\nCréez un nouveau dataframe/objet sf contenant une ligne par cellule, et une nouvelle variable donnant le nombre de bombardements dans l’emprise de cette cellule.\nCartographiez cette nouvelle manière de présenter l’information à l’aide de ggplot.\n\n\n\nTâtonnements\nPour améliorer la carte précédente, jouez sur les aspects suivants :\n\nNombre de cellules de la grille\nCellules carrées ou hexagonales\nPalette de couleurs\nDiscrétisation (avec le package classInt)"
  },
  {
    "objectID": "exercices/logements_vacants.html",
    "href": "exercices/logements_vacants.html",
    "title": "Logements vacants",
    "section": "",
    "text": "Préparation\n\nTéléchargez les données sur les logements vacants, par EPCI, sur le site de l’Observatoire des Territoires.\nVous obtenez un fichier .xlsx que vous pouvez importer avec la fonction read_excel du package readxl.\nY a-t-il un problème à l’importation ? Vous pourrez jouer sur l’argument skip de la fonction read_excel.\n\n\n\nCouche géographique\n\nÀ l’aide du package CARTElette, téléchargez les contours des EPCI pour l’année 2024. Faites en sorte que les fichiers correspondants soient enregistrés dans un sous-dossier data de votre projet R.\n\n\n\n\n\n\n\nAstuce\n\n\n\nVous utiliserez pour cela la fonction charger_carte, et trois de ses arguments : destfile, COG et nivsupra.\n\n\n\nImportez cette couche géographique à l’aide de la fonction st_read du package sf.\n\n\n\nJointure\nL’objectif est de réaliser une jointure entre le dataframe des logements vacants, et le dataframe/objet sf contenant les contours des EPCI. C’est le préalable à la cartographie.\n\nExaminez les variables contenues dans les deux dataframes. Lesquelles pourraient faire office de clef commune pour la jointure ? Sont-elles exactement identiques ?\nY a-t-il des EPCI qui apparaissent dans l’un des deux dataframes et pas dans l’autre ? Vous pourrez utiliser la fonction anti_join pour le savoir.\nRéaliser la jointure avec la fonction left_join.\n\n\n\nDistribution\nVous désirez étudier le pourcentage de logements vacants par commune. - Utilisez la fonction summary pour avoir une première idée de la distribution de cette variable. - Représentez sa distribution à l’aide des fonctions geom_boxplot, geom_histogram et geom_density.\n\n\nDiscrétisation\n\nVu la distribution de la variable, quelle distribution vous semble la plus adaptée ?\nÀ l’aide de la fonction classInt::classIntervals, procédez à la discrétisation.\n\n\n\nCartographie\n\nCartographiez la distribution du pourcentage de logements vacants en utilisant ces trois fonctions : ggplot, geom_sf et scale_fill_viridis_b.\n\n\n\n\n\n\n\nM’appeler à ce stade\n\n\n\nPour discuter des améliorations esthétiques à apporter."
  },
  {
    "objectID": "geographic-data-science.html#packages",
    "href": "geographic-data-science.html#packages",
    "title": "Geographic Data Science",
    "section": "Packages",
    "text": "Packages\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(stars)\n\nLe chargement a nécessité le package : abind\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "geographic-data-science.html#vector-data-model",
    "href": "geographic-data-science.html#vector-data-model",
    "title": "Geographic Data Science",
    "section": "Vector data model",
    "text": "Vector data model"
  },
  {
    "objectID": "geographic-data-science.html#simple-features-standard",
    "href": "geographic-data-science.html#simple-features-standard",
    "title": "Geographic Data Science",
    "section": "Simple features standard",
    "text": "Simple features standard\n\n\nAn open standard created by the Open Geopspatial Consortium (OGC)\nA feature = a thing\nFeatures = geometry + attributes\nGeometries = points.\nPoints = coordinates\nGeometry types : POINT, LINESTRING, POLYGON, MULTIPOINT, MULTILINESTRING, MULTIPOLYGON, GEOMETRYCOLLECTION."
  },
  {
    "objectID": "geographic-data-science.html#read",
    "href": "geographic-data-science.html#read",
    "title": "Geographic Data Science",
    "section": "Read",
    "text": "Read\n\nvelibs = sf::st_read(\"data/velibs.geojson\", quiet = TRUE)"
  },
  {
    "objectID": "geographic-data-science.html#inspect",
    "href": "geographic-data-science.html#inspect",
    "title": "Geographic Data Science",
    "section": "Inspect",
    "text": "Inspect\n\nclass(velibs)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\nvelibs\n\nSimple feature collection with 1499 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2.165597 ymin: 48.76462 xmax: 2.538242 ymax: 48.95757\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                                      name capacity                  geometry\n1                           Artois - Berri       23 POINT (2.306426 48.87394)\n2             Félix Ziem - Armand Gauthier       25  POINT (2.333394 48.8895)\n3                         Boudreau - Auber       14 POINT (2.329423 48.87219)\n4                         Pereire - Ternes       48 POINT (2.288012 48.87974)\n5               Claude Decaen - Cannebière       27 POINT (2.397254 48.83761)\n6  Institut du Monde Arabe - Saint-Germain       40 POINT (2.355809 48.84906)\n7        Notre-Dame-des-Champs - Stanislas       19  POINT (2.329338 48.8448)\n8                  Cimetière de Montmartre       43  POINT (2.33289 48.88647)\n9               Victor Hugo - Jeanne Jugan       28 POINT (2.415081 48.84395)\n10                Conservatoire de Musique       25 POINT (2.403401 48.77094)"
  },
  {
    "objectID": "geographic-data-science.html#plot",
    "href": "geographic-data-science.html#plot",
    "title": "Geographic Data Science",
    "section": "Plot",
    "text": "Plot\n\nggplot(velibs) +\n  geom_sf()"
  },
  {
    "objectID": "geographic-data-science.html#sf-object",
    "href": "geographic-data-science.html#sf-object",
    "title": "Geographic Data Science",
    "section": "sf object",
    "text": "sf object\n\n\n\n\nnamecapacitygeometry\n\nArtois - Berri23c(2.30642583221197, 48.8739352124082)\n\nSénat - Condé33c(2.33793944120407, 48.8495422778846)\n\nChateau22c(2.3135878035462, 48.774661399959)\n\nCadix - Hameau37c(2.28951618075371, 48.8340107632249)\n\nCentquatre42c(2.37078543752432, 48.8893335384554)\n\nMairie d'Issy41c(2.2723111510277, 48.823767792468)\n\nMusée d'Orsay65c(2.3258604481816, 48.859726157909)\n\nPlace Violet30c(2.29057565331459, 48.844878938365)\n\nQuai de Valmy26c(2.36818604171276, 48.8812695157943)"
  },
  {
    "objectID": "geographic-data-science.html#feature",
    "href": "geographic-data-science.html#feature",
    "title": "Geographic Data Science",
    "section": "Feature",
    "text": "Feature\n\n\n\n\nnamecapacitygeometry\n\nArtois - Berri23c(2.30642583221197, 48.8739352124082)\n\nSénat - Condé33c(2.33793944120407, 48.8495422778846)\n\nChateau22c(2.3135878035462, 48.774661399959)\n\nCadix - Hameau37c(2.28951618075371, 48.8340107632249)\n\nCentquatre42c(2.37078543752432, 48.8893335384554)\n\nMairie d'Issy41c(2.2723111510277, 48.823767792468)\n\nMusée d'Orsay65c(2.3258604481816, 48.859726157909)\n\nPlace Violet30c(2.29057565331459, 48.844878938365)\n\nQuai de Valmy26c(2.36818604171276, 48.8812695157943)"
  },
  {
    "objectID": "geographic-data-science.html#attributs",
    "href": "geographic-data-science.html#attributs",
    "title": "Geographic Data Science",
    "section": "Attributs",
    "text": "Attributs\n\n\n\n\nnamecapacitygeometry\n\nArtois - Berri23c(2.30642583221197, 48.8739352124082)\n\nSénat - Condé33c(2.33793944120407, 48.8495422778846)\n\nChateau22c(2.3135878035462, 48.774661399959)\n\nCadix - Hameau37c(2.28951618075371, 48.8340107632249)\n\nCentquatre42c(2.37078543752432, 48.8893335384554)\n\nMairie d'Issy41c(2.2723111510277, 48.823767792468)\n\nMusée d'Orsay65c(2.3258604481816, 48.859726157909)\n\nPlace Violet30c(2.29057565331459, 48.844878938365)\n\nQuai de Valmy26c(2.36818604171276, 48.8812695157943)"
  },
  {
    "objectID": "geographic-data-science.html#geometries",
    "href": "geographic-data-science.html#geometries",
    "title": "Geographic Data Science",
    "section": "Geometries",
    "text": "Geometries\n\n\n\n\nnamecapacitygeometry\n\nArtois - Berri23c(2.30642583221197, 48.8739352124082)\n\nSénat - Condé33c(2.33793944120407, 48.8495422778846)\n\nChateau22c(2.3135878035462, 48.774661399959)\n\nCadix - Hameau37c(2.28951618075371, 48.8340107632249)\n\nCentquatre42c(2.37078543752432, 48.8893335384554)\n\nMairie d'Issy41c(2.2723111510277, 48.823767792468)\n\nMusée d'Orsay65c(2.3258604481816, 48.859726157909)\n\nPlace Violet30c(2.29057565331459, 48.844878938365)\n\nQuai de Valmy26c(2.36818604171276, 48.8812695157943)"
  },
  {
    "objectID": "geographic-data-science.html#points",
    "href": "geographic-data-science.html#points",
    "title": "Geographic Data Science",
    "section": "Points",
    "text": "Points\n\n\n\n\nnamecapacitygeometry\n\nArtois - Berri23c(2.30642583221197, 48.8739352124082)\n\nSénat - Condé33c(2.33793944120407, 48.8495422778846)\n\nChateau22c(2.3135878035462, 48.774661399959)\n\nCadix - Hameau37c(2.28951618075371, 48.8340107632249)\n\nCentquatre42c(2.37078543752432, 48.8893335384554)\n\nMairie d'Issy41c(2.2723111510277, 48.823767792468)\n\nMusée d'Orsay65c(2.3258604481816, 48.859726157909)\n\nPlace Violet30c(2.29057565331459, 48.844878938365)\n\nQuai de Valmy26c(2.36818604171276, 48.8812695157943)"
  },
  {
    "objectID": "geographic-data-science.html#la-bd-topo",
    "href": "geographic-data-science.html#la-bd-topo",
    "title": "Geographic Data Science",
    "section": "La BD Topo",
    "text": "La BD Topo\n\nst_layers(\"data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg\")\n\nDriver: GPKG \nAvailable layers:\n                        layer_name     geometry_type features fields\n1                 troncon_de_route    3D Line String   196898     83\n2        route_numerotee_ou_nommee Multi Line String      767     12\n3                 itineraire_autre Multi Line String       15      9\n4           troncon_de_voie_ferree    3D Line String      539     21\n5          equipement_de_transport  3D Multi Polygon     1040     20\n6                piste_d_aerodrome  3D Multi Polygon       13     14\n7                        aerodrome     Multi Polygon        6     19\n8                  point_de_repere             Point     7695     19\n9                non_communication             Point       83      7\n10                 point_du_reseau          3D Point     2671     17\n11              voie_ferree_nommee Multi Line String        2      9\n12             toponymie_transport             Point      535      8\n13                        batiment  3D Multi Polygon   481047     28\n14                       cimetiere  3D Multi Polygon      444     17\n15           construction_lineaire    3D Line String     6858     17\n16         construction_ponctuelle          3D Point     6104     18\n17         construction_surfacique  3D Multi Polygon      122     17\n18                       reservoir  3D Multi Polygon      731     20\n19              ligne_orographique    3D Line String    13503     15\n20                          pylone          3D Point     2104     13\n21                terrain_de_sport  3D Multi Polygon     1241     14\n22                  toponymie_bati             Point      113      8\n23                     cours_d_eau Multi Line String     2832     15\n24          troncon_hydrographique    3D Line String    48408     40\n25    bassin_versant_topographique     Multi Polygon       99     20\n26                      plan_d_eau     Multi Polygon      384     22\n27          surface_hydrographique  3D Multi Polygon    24544     29\n28            noeud_hydrographique          3D Point     2839     22\n29           detail_hydrographique             Point      544     17\n30          toponymie_hydrographie             Point     1225      8\n31               zone_d_habitation     Multi Polygon    34831     17\n32             lieu_dit_non_habite             Point      801     14\n33             detail_orographique             Point       74     15\n34          toponymie_lieux_nommes             Point    38769      8\n35                    canalisation    3D Line String      107     14\n36                ligne_electrique    3D Line String      109     13\n37         poste_de_transformation  3D Multi Polygon       35     15\n38                             erp             Point     7621     34\n39    zone_d_activite_ou_d_interet     Multi Polygon     5068     19\n40 toponymie_services_et_activites             Point     2895      8\n41                     voie_nommee Multi Line String    32628     16\n42                 parc_ou_reserve     Multi Polygon       27     15\n43                  foret_publique     Multi Polygon       23     13\n44    toponymie_zones_reglementees             Point       51      8\n45                            haie       Line String   595670     11\n46              zone_de_vegetation     Multi Polygon   326671     10\n47                  arrondissement     Multi Polygon       12     10\n48    commune_associee_ou_deleguee     Multi Polygon       94     14\n49                         commune     Multi Polygon      379     25\n50                            epci     Multi Polygon       26      9\n51       collectivite_territoriale     Multi Polygon        7     10\n52                     departement     Multi Polygon        7     10\n53                          region     Multi Polygon        3      9\n54                     adresse_ban             Point   223365     20\n55        batiment_rnb_lien_bdtopo             Point   481643      5\n56        lien_adresse_vers_bdtopo       Line String   221568     15\n57     section_de_points_de_repere       Line String     1234     11\n58                info_metadonnees                NA        1      6\n59                 metadonnees_lot                NA        1     31\n60               metadonnees_theme                NA        9      3\n61                    layer_styles                NA       64     12\n                crs_name\n1  RGF93 v1 / Lambert-93\n2  RGF93 v1 / Lambert-93\n3  RGF93 v1 / Lambert-93\n4  RGF93 v1 / Lambert-93\n5  RGF93 v1 / Lambert-93\n6  RGF93 v1 / Lambert-93\n7  RGF93 v1 / Lambert-93\n8  RGF93 v1 / Lambert-93\n9  RGF93 v1 / Lambert-93\n10 RGF93 v1 / Lambert-93\n11 RGF93 v1 / Lambert-93\n12 RGF93 v1 / Lambert-93\n13 RGF93 v1 / Lambert-93\n14 RGF93 v1 / Lambert-93\n15 RGF93 v1 / Lambert-93\n16 RGF93 v1 / Lambert-93\n17 RGF93 v1 / Lambert-93\n18 RGF93 v1 / Lambert-93\n19 RGF93 v1 / Lambert-93\n20 RGF93 v1 / Lambert-93\n21 RGF93 v1 / Lambert-93\n22 RGF93 v1 / Lambert-93\n23 RGF93 v1 / Lambert-93\n24 RGF93 v1 / Lambert-93\n25 RGF93 v1 / Lambert-93\n26 RGF93 v1 / Lambert-93\n27 RGF93 v1 / Lambert-93\n28 RGF93 v1 / Lambert-93\n29 RGF93 v1 / Lambert-93\n30 RGF93 v1 / Lambert-93\n31 RGF93 v1 / Lambert-93\n32 RGF93 v1 / Lambert-93\n33 RGF93 v1 / Lambert-93\n34 RGF93 v1 / Lambert-93\n35 RGF93 v1 / Lambert-93\n36 RGF93 v1 / Lambert-93\n37 RGF93 v1 / Lambert-93\n38 RGF93 v1 / Lambert-93\n39 RGF93 v1 / Lambert-93\n40 RGF93 v1 / Lambert-93\n41 RGF93 v1 / Lambert-93\n42 RGF93 v1 / Lambert-93\n43 RGF93 v1 / Lambert-93\n44 RGF93 v1 / Lambert-93\n45 RGF93 v1 / Lambert-93\n46 RGF93 v1 / Lambert-93\n47 RGF93 v1 / Lambert-93\n48 RGF93 v1 / Lambert-93\n49 RGF93 v1 / Lambert-93\n50 RGF93 v1 / Lambert-93\n51 RGF93 v1 / Lambert-93\n52 RGF93 v1 / Lambert-93\n53 RGF93 v1 / Lambert-93\n54 RGF93 v1 / Lambert-93\n55 RGF93 v1 / Lambert-93\n56 RGF93 v1 / Lambert-93\n57 RGF93 v1 / Lambert-93\n58                  &lt;NA&gt;\n59                  &lt;NA&gt;\n60                  &lt;NA&gt;\n61                  &lt;NA&gt;"
  },
  {
    "objectID": "geographic-data-science.html#cours-deau",
    "href": "geographic-data-science.html#cours-deau",
    "title": "Geographic Data Science",
    "section": "Cours d’eau",
    "text": "Cours d’eau\n\ncours_d_eau = st_read(\"data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg\",\n                      layer = \"cours_d_eau\")\n\nReading layer `cours_d_eau' from data source \n  `/home/theo/enquetes-quantitatives/data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg' \n  using driver `GPKG'\nSimple feature collection with 2832 features and 15 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 295216.4 ymin: 6716245 xmax: 517921.6 ymax: 6854598\nProjected CRS: RGF93 v1 / Lambert-93"
  },
  {
    "objectID": "geographic-data-science.html#forêts-publiques",
    "href": "geographic-data-science.html#forêts-publiques",
    "title": "Geographic Data Science",
    "section": "Forêts publiques",
    "text": "Forêts publiques\n\nforet_publique = st_read(dsn = \"data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg\",\n                         layer = \"foret_publique\")\n\nReading layer `foret_publique' from data source \n  `/home/theo/enquetes-quantitatives/data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg' \n  using driver `GPKG'\nSimple feature collection with 23 features and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 389284 ymin: 6742285 xmax: 489008.5 ymax: 6843152\nProjected CRS: RGF93 v1 / Lambert-93"
  },
  {
    "objectID": "geographic-data-science.html#pylônes",
    "href": "geographic-data-science.html#pylônes",
    "title": "Geographic Data Science",
    "section": "Pylônes",
    "text": "Pylônes\n\npylone = st_read(dsn = \"data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg\",\n                 layer = \"pylone\")\n\nReading layer `pylone' from data source \n  `/home/theo/enquetes-quantitatives/data/BDT_3-4_GPKG_LAMB93_D053-ED2024-06-15.gpkg' \n  using driver `GPKG'\nSimple feature collection with 2104 features and 13 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 381627.9 ymin: 6738667 xmax: 479014.9 ymax: 6835443\nz_range:       zmin: 43 zmax: 314.4\nProjected CRS: RGF93 v1 / Lambert-93"
  },
  {
    "objectID": "geographic-data-science.html#carte-des-cours-deau",
    "href": "geographic-data-science.html#carte-des-cours-deau",
    "title": "Geographic Data Science",
    "section": "Carte des cours d’eau",
    "text": "Carte des cours d’eau\n\nggplot() +\n  geom_sf(data = cours_d_eau, color = \"blue\")"
  },
  {
    "objectID": "geographic-data-science.html#ajouter-les-forêts-publiques",
    "href": "geographic-data-science.html#ajouter-les-forêts-publiques",
    "title": "Geographic Data Science",
    "section": "Ajouter les forêts publiques",
    "text": "Ajouter les forêts publiques\n\nggplot() +\n  geom_sf(data = cours_d_eau, color = \"blue\") +\n  geom_sf(data = foret_publique, fill = \"darkgreen\")"
  },
  {
    "objectID": "geographic-data-science.html#ajouter-les-pylônes",
    "href": "geographic-data-science.html#ajouter-les-pylônes",
    "title": "Geographic Data Science",
    "section": "Ajouter les pylônes",
    "text": "Ajouter les pylônes\n\nggplot() +\n  geom_sf(data = cours_d_eau, color = \"blue\") +\n  geom_sf(data = foret_publique, fill = \"darkgreen\") +\n  geom_sf(data = pylone, color = \"brown\")"
  },
  {
    "objectID": "geographic-data-science.html#raster-data-model",
    "href": "geographic-data-science.html#raster-data-model",
    "title": "Geographic Data Science",
    "section": "Raster data model",
    "text": "Raster data model"
  },
  {
    "objectID": "geographic-data-science.html#résolution",
    "href": "geographic-data-science.html#résolution",
    "title": "Geographic Data Science",
    "section": "Résolution",
    "text": "Résolution"
  },
  {
    "objectID": "geographic-data-science.html#lumières-nocturnes",
    "href": "geographic-data-science.html#lumières-nocturnes",
    "title": "Geographic Data Science",
    "section": "Lumières nocturnes",
    "text": "Lumières nocturnes"
  },
  {
    "objectID": "geographic-data-science.html#relief",
    "href": "geographic-data-science.html#relief",
    "title": "Geographic Data Science",
    "section": "Relief",
    "text": "Relief\n\nfs::file_size(\"data/GRAY_HR_SR.tif\")\n\n223M\n\nrelief = read_stars(\"data/GRAY_HR_SR.tif\", proxy = TRUE)"
  },
  {
    "objectID": "geographic-data-science.html#plotting-rasters",
    "href": "geographic-data-science.html#plotting-rasters",
    "title": "Geographic Data Science",
    "section": "Plotting rasters",
    "text": "Plotting rasters\n\nggplot() +\n  geom_stars(data = relief, downsample = 6) +\n  theme_void()"
  },
  {
    "objectID": "geographic-data-science.html#géoïdes",
    "href": "geographic-data-science.html#géoïdes",
    "title": "Geographic Data Science",
    "section": "Géoïdes",
    "text": "Géoïdes"
  },
  {
    "objectID": "geographic-data-science.html#ellipsoïdes",
    "href": "geographic-data-science.html#ellipsoïdes",
    "title": "Geographic Data Science",
    "section": "Ellipsoïdes",
    "text": "Ellipsoïdes"
  },
  {
    "objectID": "geographic-data-science.html#familles-de-projections",
    "href": "geographic-data-science.html#familles-de-projections",
    "title": "Geographic Data Science",
    "section": "Familles de projections",
    "text": "Familles de projections"
  },
  {
    "objectID": "geographic-data-science.html#country-borders",
    "href": "geographic-data-science.html#country-borders",
    "title": "Geographic Data Science",
    "section": "Country borders",
    "text": "Country borders\n\n\nSimple feature collection with 257 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.65187\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                      CNTR_NAME                       geometry\n1      الإمارات العربية المتحدة MULTIPOLYGON (((56.35462 25...\n2           افغانستان-افغانستان MULTIPOLYGON (((74.7055 37....\n3           Antigua and Barbuda MULTIPOLYGON (((-61.80237 1...\n4                      Anguilla MULTIPOLYGON (((-63.05444 1...\n5                     Shqipëria MULTIPOLYGON (((19.831 42.4...\n6                      Հայաստան MULTIPOLYGON (((46.45984 39...\n7                        Angola MULTIPOLYGON (((23.83831 -1...\n8                     Argentina MULTIPOLYGON (((-62.87957 -...\n9  American Samoa-Sāmoa Amelika MULTIPOLYGON (((-169.3966 -...\n10                   Österreich MULTIPOLYGON (((16.88365 48..."
  },
  {
    "objectID": "geographic-data-science.html#querying-a-crs",
    "href": "geographic-data-science.html#querying-a-crs",
    "title": "Geographic Data Science",
    "section": "Querying a CRS",
    "text": "Querying a CRS\n\nst_crs(countries)\n\nCoordinate Reference System:\n  User input: EPSG:4326 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"unknown\"],\n        AREA[\"World\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]"
  },
  {
    "objectID": "geographic-data-science.html#spécifier-un-crs",
    "href": "geographic-data-science.html#spécifier-un-crs",
    "title": "Geographic Data Science",
    "section": "Spécifier un CRS",
    "text": "Spécifier un CRS\nEPSG or ESRI codes\n\nst_transform(countries, crs = \"ESRI:54012\")\n\n\nPROJ4 string\n\nst_transform(countries, crs = \"+proj=laea +lon_0=100 +lat_0=45\")"
  },
  {
    "objectID": "geographic-data-science.html#sites-utiles",
    "href": "geographic-data-science.html#sites-utiles",
    "title": "Geographic Data Science",
    "section": "Sites utiles",
    "text": "Sites utiles\n\nhttps://spatialreference.org/\nhttps://proj.org/en/9.4/operations/projections/\nhttps://epsg.io/"
  },
  {
    "objectID": "geographic-data-science.html#wgs84",
    "href": "geographic-data-science.html#wgs84",
    "title": "Geographic Data Science",
    "section": "WGS84",
    "text": "WGS84\n\n\nCode\nggplot(countries) +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#robinson",
    "href": "geographic-data-science.html#robinson",
    "title": "Geographic Data Science",
    "section": "Robinson",
    "text": "Robinson\n\n\nCode\nst_transform(countries, \"ESRI:54030\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#eckert-4",
    "href": "geographic-data-science.html#eckert-4",
    "title": "Geographic Data Science",
    "section": "Eckert 4",
    "text": "Eckert 4\n\n\nCode\nst_transform(countries, \"+proj=eck4\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#bonne",
    "href": "geographic-data-science.html#bonne",
    "title": "Geographic Data Science",
    "section": "Bonne",
    "text": "Bonne\n\n\nCode\nst_transform(countries, \"+proj=bonne +lat_1=10\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#lambert-azimuthal-equal-area",
    "href": "geographic-data-science.html#lambert-azimuthal-equal-area",
    "title": "Geographic Data Science",
    "section": "Lambert azimuthal equal-area",
    "text": "Lambert azimuthal equal-area\n\n\nCode\nst_transform(countries, \"+proj=laea\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#laea-asie",
    "href": "geographic-data-science.html#laea-asie",
    "title": "Geographic Data Science",
    "section": "LAEA Asie",
    "text": "LAEA Asie\n\n\nCode\nst_transform(countries, \"+proj=laea +lon_0=100 +lat_0=45\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#laea-amérique-du-nord",
    "href": "geographic-data-science.html#laea-amérique-du-nord",
    "title": "Geographic Data Science",
    "section": "LAEA Amérique du Nord",
    "text": "LAEA Amérique du Nord\n\n\nCode\nst_transform(countries, \"+proj=laea +lon_0=-95 +lat_0=45\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#laea-amérique-du-sud",
    "href": "geographic-data-science.html#laea-amérique-du-sud",
    "title": "Geographic Data Science",
    "section": "LAEA Amérique du Sud",
    "text": "LAEA Amérique du Sud\n\n\nCode\nst_transform(countries, \"+proj=laea +lon_0=-61 +lat_0=-21\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#laea-afrique",
    "href": "geographic-data-science.html#laea-afrique",
    "title": "Geographic Data Science",
    "section": "LAEA Afrique",
    "text": "LAEA Afrique\n\n\nCode\nst_transform(countries, \"+proj=laea +lon_0=18 +lat_0=0\") |&gt; \n  ggplot() +\n  geom_sf(fill = \"black\") +\n  theme_bw()"
  },
  {
    "objectID": "geographic-data-science.html#crs-usuels",
    "href": "geographic-data-science.html#crs-usuels",
    "title": "Geographic Data Science",
    "section": "CRS usuels",
    "text": "CRS usuels\n\n\nMonde : Eckert 4 : ESRI:54012 ou +proj=eck4\nEurope : European Centric Lambert azimuthal equal-area : EPSG:3035\nFrance : RGF93 / Lambert-93 : EPSG-2154"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Enquêtes quantitatives",
    "section": "",
    "text": "Ce cours propose une initiation à diverses méthodes quantitatives à partir d’enquêtes de sciences sociales. Chaque séance s’organise autour de la rencontre entre une question (sociologique, anthropologique, historiographique), des données et une méthode : cartographie, réduction de la dimensionnalité, partitionnement, analyse de séquences, analyse textuelle, statistiques bayésiennes.\nL’objectif du cours est d’acquérir une compréhension schématique de la mise en oeuvre de ces méthodes, de leurs mérites et de leurs limites. Comment représenter des données spatiales, des séquences temporelles ? Qu’apportent les statistiques bayésiennes qui manque à l’approche fréquentiste ? Comment analyser les propriétés morpho-synthaxiques d’un texte ? Comment passer d’un grand nombre de variables à un petit nombre de classes ?\nCes questions se poseront en contexte, dans une dynamique d’ajustement entre données, méthode et question de recherche (une dynamique d’enquête)."
  },
  {
    "objectID": "faq.html",
    "href": "faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Cours donné à l’École Normale Supérieure au premier semestre de l’année 2024-2025, par Théo Boulakia, dans le cadre de l’Observatoire des Humanités Numériques.\n\nQuand ?\nLe mercredi, de 15h à 18h : 18 septembre, 25 septembre, 9 octobre, 23 octobre, 6 novembre, 13 novembre, 4 décembre et 18 décembre 2024.\n\n\nOù ?\nDans la salle de conférences du Centre de Sciences de données (ENS-PSL, 45 rue d’Ulm, tout en haut de l’escalier B ou C).\n\n\nComment s’inscrire ?\nEnvoyez simplement un mail à l’adresse suivante : theo.boulakia[at]gmail.com. Indiquez votre formation, précisez si vous avez déjà une expérience en programmation ou des connaissances en statistiques.\n\n\nEst-il possible de venir en auditeur libre ?\nTout à fait. La validation n’est pas requise.\n\n\nComment valider le cours ?\n\nTrouver des données qui vous intéressent. Elles peuvent correspondre à un intérêt personnel, à une recherche en cours ou à un projet de recherche futur.\nLeur appliquer une ou plusieurs des méthodes vues en cours.\nRendre un document de 4 pages présentant les données, la problématique, les étapes de l’analyse et l’interprétation des résultats.\n\n\n\nFaut-il savoir coder ?\nNon. Vous pouvez assister au cours même si vous n’avez jamais programmé."
  },
  {
    "objectID": "exercices/exces-mortalite.html",
    "href": "exercices/exces-mortalite.html",
    "title": "Excès de mortalité",
    "section": "",
    "text": "Contexte\nOn souhaite identifier les pays les plus touchés par la pandémie de Covid-19, en utilisant une métrique robuste.\n\n\n\n\n\n\nConseil\n\n\n\nRendez-vous sur Our World in Data et parcourez l’article pour comprendre la problématique.\n\n\n\n\nPréparation\n\nChargez les packages tidyverse et sf.\nLes données de l’exercice sont en ligne sur le repo github de Our World in Data.\nImportez les directement depuis l’url suivante, sans les télécharger, à l’aide de la fonction read_csv.\n\n\n\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/excess_mortality/excess_mortality.csv\"\n\n\n\nselect\nÀ l’aide de la fonction select, sélectionnez les variables suivantes :\n\nlocation\ndate\ntime_unit\nprojected_deaths_since_2020_all_ages\np_scores_all_ages\ndeaths_since_2020_all_ages\n\n\n\nmutate\nCalculez le p-score à l’aide de la formule donnée dans l’article cité plus haut, sachant que la mortalité observée est donnée par la variable deaths_since_2020_all_ages, et la mortalité attendue par projected_deaths_since_2020_all_ages. Vérifiez que ce que vous avez calculé correspond bien à la variable p_scores_all_ages.\n\n\ngeom_line\n\nÀ l’aide du package ggplot et de sa fonction geom_line, visualisez, pour 6 pays de votre choix :\n\nl’évolution de la mortalité brute\nl’évolution des p-scores\n\nChoisissez celle de ces deux représentations qui vous semble la plus lisible, et distinguez les pays par la couleur de la courbe qui leur correspond, ou le type de trait (linetype).\nDe même, créez un mini-graphique séparé pour chaque pays. Vous pourrez utiliser la fonction facet_wrap.\nQuelle représentation vous semble la plus lisible ?\n\n\n\nfilter\nÀ l’aide de la fonction filter, sélectionnez uniquement les observations qui se situent entre le 1er mars et le 1er juin 2020.\n\n\nsummarise\nSur le dataframe auquel vous venez d’appliquer la fonction filter, utilisez les fonctions group_by et summarise pour créer les variables suivantes, pour chaque pays :\n\nla somme des décès escomptés sur la période\nla somme des décès effectivement observés\nle p-score pour la période\n\nSauf précision, les étapes ultérieures de l’exercice s’appliquent à ce nouveau dataframe.\n\n\nDistribution\nVous désirez étudiez la distribution de la variable p-score que vous venez de calculer.\n\nUtilisez la fonction summary pour en avoir une première idée.\nReprésentez la graphiquement à l’aide des fonctions geom_boxplot, geom_histogram et geom_density.\n\n\n\nCouche cartographique\n\nÀ l’aide du package giscor, obtenez un objet sf représentant les frontières de l’ensemble des pays du monde.\nReprojetez le en Eckert 4 à l’aide de la fonction st_transform du package sf.\nAssignez le résultat à un objet nommé countries.\n\n\n\nJointure\nVous voulez combiner le dataframe/objet sf countries et le dataframe créé avec la fonction summarise.\n\nExaminez les variables contenues dans les deux dataframes. Lesquelles pourraient faire office de clef commune pour la jointure ? Sont-elles exactement identiques ?\nY a-t-il des observations (pays) qui apparaissent dans l’un des deux dataframes et pas dans l’autre ? Vous pourrez utiliser la fonction anti_join pour le savoir.\nRéalisez la jointure avec la fonction left_join.\n\n\n\nDiscrétisation\nVous souhaitez discrétiser la variable p-score afin d’en faire une représentation cartographique lisible.\n\nVu la distribution de la variable, quelle distribution vous semble la plus adaptée ?\nÀ l’aide de la fonction classInt::classIntervals, procédez à la discrétisation.\n\n\n\nCartographie\n\nCartographiez la distribution des p-scores au printemps 2020 avec les trois fonctions suivantes : ggplot, geom_sf, scale_fill_viridis_b."
  },
  {
    "objectID": "exercices/elections-legislatives.html",
    "href": "exercices/elections-legislatives.html",
    "title": "Élections législatives",
    "section": "",
    "text": "Préparation\n\nTéléchargez les résultats du premier tour des élections législatives anticipées de 2024, par commune.\nChargez les packages tidyverse et sf.\nÀ l’aide du package readxl, importez les données téléchargées.\n\n\n\nRecodages\n\nCombien d’observations et de variables contient cette base de données ? Pourquoi y a-t-il autant de variables ?\nSélectionnez les variables donnant les informations générales (nombre d’inscrits, de votants, de votes nuls, blancs, d’absentions et pourcentages correspondants). Vous pourrez utiliser la fonction select.\nQuel est le type des variables exprimées en pourcentage ?\nConvertissez toutes ces variables dans un type plus adapté. Vous pourrez utiliser la fonction parse_number du package readr.\n\n\n\nInspection\n\nÀ l’aide de la fonction skim du package skimr, inspectez rapidement l’ensemble de vos variables et tout particulièrement le nombre de valeurs manquantes pour chacune d’entre elles.\nSi vous constatez qu’une variable contient des valeurs manquantes, isolez les observations concernées dans un nouveau dataframe à l’aide des fonctions filter et is.na. Que remarquez-vous ?\n\n\n\n\n\n\n\nM’appeler à ce stade\n\n\n\nPour que je vous explique le problème et vous donne la solution.\n\n\n\n\nCouche géographique\n\nÀ l’aide du package CARTElette, téléchargez les contours des communes pour l’année 2024. Faites en sorte que les fichiers correspondants soient enregistrés dans un sous-dossier data de votre projet R.\n\n\n\n\n\n\n\nAstuce\n\n\n\nVous utiliserez pour cela la fonction charger_carte, et trois de ses arguments : destfile, COG et nivsupra.\n\n\n\nImportez cette couche géographique à l’aide de la fonction st_read du package sf.\nSélectionnez les variables correspondant au code de la commune et du département, au nom de la commune et à sa population.\nTriez les observations par code géographique croissant. Vous pourrez utiliser la fonction arrange.\n\n\n\nJointure\nL’objectif est de réaliser une jointure entre le dataframe des résultats électoraux, et le dataframe/objet sf contenant les contours des communes, afin de pouvoir cartographier les résultats.\n\nExaminez les variables contenues dans les deux dataframes. Lesquelles pourraient faire office de clef commune pour la jointure ? Sont-elles exactement identiques ?\nRecodez la variable que vous avez choisie comme clef commune de manière à ce qu’elle soit absolument identique dans les deux dataframes.\n\n\n\n\n\n\n\nM’appeler à ce stade\n\n\n\nPour que je vous indique les fonctions dont vous aurez besoin.\n\n\n\nUne fois que la variable commune est rigoureusement identique dans les deux dataframes, identifiez les observations (les communes) éventuellement présentes dans l’un, mais pas dans l’autre, à l’aide de la fonction anti_join. Y a-t-il une logique dans ces absences ?\nRéalisez la jointure à l’aide de la fonction left_join.\n\n\n\nAbsention\nVous désirez étudier le pourcentage d’abstention par commune. - Utilisez la fonction summary pour avoir une première idée de la distribution de cette variable. - Représentez sa distribution à l’aide des fonctions geom_boxplot, geom_histogram et geom_density. - Représentez, sur un même graphe, le pourcentage de votes blancs, de votes nuls et d’absentions. Que remarquez-vous ?\n\n\n\n\n\n\nAstuce\n\n\n\nVous pourrez utiliser la fonction geom_point et jouer avec les scales suivantes : x, y, fill.\n\n\n\n\nDiscrétisation\n\nVu la distribution de la variable du pourcentage d’absentions, quelle distribution vous semble la plus adaptée ?\nÀ l’aide de la fonction classInt::classIntervals, procédez à la discrétisation.\n\n\n\nCartographie\n\nCartographiez le pourcentage de logements vacants en utilisant ces trois fonctions : ggplot, geom_sf et scale_fill_viridis_b.\nCartographiez la distribution de l’absention en utilisant ces trois fonctions : ggplot, geom_sf et scale_fill_viridis_b.\n\n\n\n\n\n\n\nM’appeler à ce stade\n\n\n\nPour discuter des améliorations esthétiques à apporter."
  },
  {
    "objectID": "exercices/google-mobility.html",
    "href": "exercices/google-mobility.html",
    "title": "Google Mobility",
    "section": "",
    "text": "Préparation\n\nCréer un dossier à la racine de votre ordinateur, puis un projet R correspondant à ce dossier.\n\nOuvrez un nouveau script que vous nommerez google.R.\n\nImportez le package tidyverse.\nRendez-vous sur cette page et lisez la documentation.\nTéléchargez le CSV pour le monde entier dans le dossier que vous venez de créer.\n\n\n\nImportation\nImportez les données à l’aide de la fonction vroom du package du même nom, avec la syntaxe vroom::vroom. Assignez les à un objet nommé google.\n\n\nInspection\n\nRegardez ce qu’elles contiennent à l’aide de la fonction glimpse.\n\n\n\nfilter\n\nÀ l’aide de la fonction filter du package dplyr, sélectionnez uniquement :\n\nles observations au niveau national, et non infranational.\nles pays suivants : Allemagne, Pays-Bas, France, Danemark, Italie, Espagne.\nles observations situées entre le 1er mars 2020 et le 1er juin 2020.\n\nAssignez le résultat à un objet nommé europe_subset.\nÀ l’aide du package ggplot2 et en particulier de la fonction geom_line, visualisez l’évolution temporelle de la fréquentation des espaces verts (variable parks…) et du temps passé chez soi (residential…) dans les 6 pays sélectionnés Vous pourrez utiliser la fonction facet_wrap afin de créer un graphique distinct pour chaque pays.\n\n\n\nsummarise\n\nRepartez de l’objet google.\nSélectionnez uniquement :\n\nles observations au niveau national, et non infranational.\nles observations situées entre le 1er mars 2020 et le 1er juin 2020.\n\nEn utilisant successivement les fonctions group_by et summarise, calculez l’évolution moyenne de la fréquentation des espaces verts (variable parks…) pour chaque pays.\nÀ l’issue de cette opération, vous obtenez normalement un tableau contenant deux variables, et autant de lignes qu’il y a de pays. Assignez ce résultat à un objet nommé google_countries.\n\n\n\nCartographie\n\nÀ l’aide du package giscor, obtenez un objet sf représentant les frontières de l’ensemble des pays du monde.\nReprojetez le en Eckert 4 à l’aide de la fonction st_transform du package sf.\nAssignez le résultat à un objet nommé countries.\nÀ l’aide de la fonction left_join, combinez le dataframe/objet sf countries et le dataframe google_countries.\nChoisissez une discrétisation adaptée à l’aide de la fonction classInt::classIntervals.\nCartographiez l’évolution de la fréquentation des espaces verts dans le monde au printemps 2020 en utilisant les 3 fonctions suivantes : ggplot, geom_sf, scale_fill_viridis_b.\n\n\n\nObtenir de l’aide\n\nPour obtenir de l’aide sur une fonction directement depuis R, tapez ? suivi du nom de la fonction. Il se peut qu’un même nom renvoie à des fonctions différentes, appartenant à des packages différents. Par exemple, ?filter renvoie deux résultats. Pour éviter toute ambiguïté, vous pouvez utiliser la syntaxe package::function, par exemple : ?dplyr::filter.\nLes sites des packages contiennent de très nombreux exemples. Il est vivement conseillé de les consulter.\nDeux livres en accès libre sont particulièrement précieux lorsqu’on débute (et même au-delà) : Introduction à R et au tidyverse de Julien Barnier et R for Data Science de Hadley Wickham (auteur du package tidyverse).\nEn particulier, le chapitre Les Verbes de dplyr est une lecture utile.\nPour celles et ceux qui étaient absents à la séance 3, il sera utile de lire la section Tests et comparaisons de Introduction à R et au tidyverse.\nDe même, pour celles et ceux qui auraient du mal avec le pipe ( |&gt; ou %&gt;%), il est utile de lire la section correspondante."
  },
  {
    "objectID": "corrections.html",
    "href": "corrections.html",
    "title": "Corrections",
    "section": "",
    "text": "Aucun article correspondant"
  },
  {
    "objectID": "programme.html",
    "href": "programme.html",
    "title": "Programme",
    "section": "",
    "text": "Linéaments du territoire\n\n\n\n\n\n\n\n\n\n\n\n18 sept. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCouleurs du continu\n\n\n\n\n\n\n\n\n\n\n\n25 sept. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nCorrespondances\n\n\n\n\n\n\n\n\n\n\n\n9 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nStyles\n\n\n\n\n\n\n\n\n\n\n\n23 oct. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nSéquences\n\n\n\n\n\n\n\n\n\n\n\n6 nov. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIncertitude\n\n\n\n\n\n\n\n\n\n\n\n13 nov. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nIndices\n\n\n\n\n\n\n\n\n\n\n\n4 déc. 2024\n\n\n\n\n\n\n\n\n\n\n\n\nEmboîtements\n\n\n\n\n\n\n\n\n\n\n\n18 déc. 2024\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "ggplot2.html#workflow",
    "href": "ggplot2.html#workflow",
    "title": "A Grammar of Graphics",
    "section": "Workflow",
    "text": "Workflow"
  },
  {
    "objectID": "ggplot2.html#packages",
    "href": "ggplot2.html#packages",
    "title": "A Grammar of Graphics",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "ggplot2.html#import",
    "href": "ggplot2.html#import",
    "title": "A Grammar of Graphics",
    "section": "Import",
    "text": "Import\nSimple (base R)\n\ndvf = read.csv(\"data/dvf_aiglun.csv\")\n\n\nFaster (readr package)\n\ndvf = read_csv(\"data/dvf_aiglun.csv\")\n\n\n\nEven faster\n\ndvf = vroom::vroom(\"data/dvf_aiglun.csv\")\n\n\n\nFast and simple\n\ndvf = rio::import(\"data/dvf_aiglun.csv\")\n\n\n\nFast, simple and safe\n\ndvf = rio::import(here::here(\"data\", \"dvf_aiglun.csv\"))"
  },
  {
    "objectID": "ggplot2.html#inspect",
    "href": "ggplot2.html#inspect",
    "title": "A Grammar of Graphics",
    "section": "Inspect",
    "text": "Inspect\n\nclass(dvf)\n\n[1] \"data.frame\"\n\n\n\ndvf\n\n    X       date        type   prix surface pieces latitude longitude\n1   1 2019-02-20      Maison 178000      80      4 44.05407  6.140493\n2   2 2019-03-08 Appartement 120000      48      2 44.05963  6.147804\n3   3 2019-05-24      Maison 320000     172      4 44.06694  6.138814\n4   4 2019-06-06      Maison 164350      76      3 44.05272  6.142440\n5   5 2019-06-07      Maison 250000      95      4 44.07036  6.133687\n6   6 2019-11-08      Maison 290000     127      4 44.05521  6.134305\n7   7 2019-11-08      Maison 306600     125      6 44.05431  6.132984\n8   8 2019-11-16 Appartement 178000      91      5 44.06010  6.148028\n9   9 2019-12-12 Appartement 139000      66      3 44.06010  6.148028\n10 10 2020-02-11      Maison  76000      88      4 44.05283  6.133513\n11 11 2020-06-18      Maison 250000     166      5 44.05407  6.140493\n12 12 2020-08-07      Maison 190000      97      4 44.04928  6.140711\n13 13 2020-07-30 Appartement 147500      91      4 44.05963  6.147804\n14 14 2020-11-13      Maison 280000     160      4 44.05181  6.146251\n15 15 2021-01-15      Maison 240000      81      4 44.05803  6.148892\n16 16 2021-06-09 Appartement  44000      26      1 44.05963  6.147804\n17 17 2021-07-02      Maison 389500     135      4 44.05583  6.147911\n18 18 2021-11-04      Maison 250000      96      4 44.05021  6.138194\n19 19 2022-03-25      Maison 180000     100      5 44.05719  6.136185\n20 20 2022-05-24      Maison  93000     131      4 44.04278  6.143266\n21 21 2022-05-30      Maison 220000     125      6 44.06630  6.140405\n22 22 2022-07-06 Appartement 160000     122      4 44.06040  6.110681\n23 23 2022-07-25 Appartement 194000      78      3 44.05952  6.147453\n24 24 2022-07-19 Appartement  91000      35      2 44.05963  6.147804\n25 25 2022-07-19      Maison 256550      99      4 44.06038  6.147991\n26 26 2022-08-20      Maison 187000     125      5 44.05235  6.145856\n27 27 2022-09-30      Maison 330000     132      4 44.05781  6.134520\n28 28 2022-12-05 Appartement 100000      86      4 44.05963  6.147804\n29 29 2022-12-19 Appartement  70000      40      2 44.05952  6.147453\n30 30 2023-03-09      Maison 257700      77      4 44.05336  6.133104\n31 31 2023-08-08      Maison  70000      50      2 44.04813  6.139726\n32 32 2023-09-15      Maison 414550     119      6 44.05078  6.140327\n33 33 2023-10-25      Maison 291300     126      5 44.06106  6.139871\n34 34 2023-12-08      Maison 263600     125      5 44.05235  6.145856"
  },
  {
    "objectID": "ggplot2.html#scatterplot",
    "href": "ggplot2.html#scatterplot",
    "title": "A Grammar of Graphics",
    "section": "Scatterplot",
    "text": "Scatterplot\n\nggplot(data = dvf, mapping = aes(x = surface, y = prix)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#boxplot",
    "href": "ggplot2.html#boxplot",
    "title": "A Grammar of Graphics",
    "section": "Boxplot",
    "text": "Boxplot\n\nggplot(data = dvf, mapping = aes(x = type, y = prix)) +\n  geom_boxplot()"
  },
  {
    "objectID": "ggplot2.html#size-aesthetic",
    "href": "ggplot2.html#size-aesthetic",
    "title": "A Grammar of Graphics",
    "section": "Size aesthetic",
    "text": "Size aesthetic\n\nggplot(data = dvf, mapping = aes(x = surface, y = prix,\n                                 size = pieces)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#lets-break-it-down",
    "href": "ggplot2.html#lets-break-it-down",
    "title": "A Grammar of Graphics",
    "section": "Let’s break it down",
    "text": "Let’s break it down\n\n\nCode\nggplot(data = dvf,\n       mapping = aes(x = surface, y = prix, size = pieces, colour = type)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#import-1",
    "href": "ggplot2.html#import-1",
    "title": "A Grammar of Graphics",
    "section": "Import",
    "text": "Import\n\ndeputes = readr::read_csv(\"data/deputes.csv\")"
  },
  {
    "objectID": "ggplot2.html#inspect-1",
    "href": "ggplot2.html#inspect-1",
    "title": "A Grammar of Graphics",
    "section": "Inspect",
    "text": "Inspect\n\nclass(deputes)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\n\ndeputes\n\n# A tibble: 577 × 7\n   nom        prenom departement circonscription profession groupe groupe_abrege\n   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;        \n 1 K/Bidi     Émeli… Réunion                   4 Avocate    Gauch… GDR          \n 2 Bénard     Édoua… Seine-Mari…               3 Collabora… Gauch… GDR          \n 3 Le Feur    Sandr… Finistère                 4 Agriculte… Ensem… EPR          \n 4 Tesson     Thier… Nord                     17 (74) - An… Rasse… RN           \n 5 Villedieu  Antoi… Haute-Saône               1 Policier   Rasse… RN           \n 6 Gernigon   Franç… Maine-et-L…               1 Ancien ca… Horiz… HOR          \n 7 Sas        Eva    Paris                     8 Cadre sup… Écolo… EcoS         \n 8 Auzanot    Bénéd… Vaucluse                  2 (85) - Pe… Rasse… RN           \n 9 Tavernier  Boris  Rhône                     2 (37) - Ca… Écolo… EcoS         \n10 Christoph… Paul   Drôme                     1 (37) - Ca… Socia… SOC          \n# ℹ 567 more rows"
  },
  {
    "objectID": "ggplot2.html#barplot",
    "href": "ggplot2.html#barplot",
    "title": "A Grammar of Graphics",
    "section": "Barplot",
    "text": "Barplot\n\nggplot(deputes, aes(x = groupe_abrege)) +\n  geom_bar()"
  },
  {
    "objectID": "ggplot2.html#import-2",
    "href": "ggplot2.html#import-2",
    "title": "A Grammar of Graphics",
    "section": "Import",
    "text": "Import\n\nips = arrow::read_parquet(\"data/ips_colleges.parquet\")"
  },
  {
    "objectID": "ggplot2.html#inspect-2",
    "href": "ggplot2.html#inspect-2",
    "title": "A Grammar of Graphics",
    "section": "Inspect",
    "text": "Inspect\n\nclass(ips)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\nips\n\n# A tibble: 6,962 × 8\n   nom_etablissement       academie   ips sd_ips secteur departement nom_commune\n   &lt;chr&gt;                   &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt;      \n 1 college hutinel         creteil  105.    34.8 public  seine-et-m… gretz arma…\n 2 college de l europe     creteil  107.    31.8 public  seine-et-m… dammartin …\n 3 college marie laurencin creteil  112.    34.4 public  seine-et-m… ozoir la f…\n 4 college marie curie     creteil   86.9   30.3 public  seine-et-m… provins    \n 5 college victor schoelc… creteil  115.    33   public  seine-et-m… torcy      \n 6 college les bles d or   creteil  130.    31   public  seine-et-m… bailly rom…\n 7 college erik satie      creteil  104.    34   public  seine-et-m… mitry mory \n 8 college lucie aubrac    creteil  111.    39.2 public  seine-et-m… montevrain \n 9 college colonel arnaud… creteil  127.    34.6 public  seine-et-m… vulaines s…\n10 college flora tristan   versail…  86.9   32.6 public  yvelines    carrieres …\n# ℹ 6,952 more rows\n# ℹ 1 more variable: code_commune &lt;chr&gt;"
  },
  {
    "objectID": "ggplot2.html#boxplot-1",
    "href": "ggplot2.html#boxplot-1",
    "title": "A Grammar of Graphics",
    "section": "Boxplot",
    "text": "Boxplot\n\n\nCode\nggplot(ips, aes(x = secteur, y = ips)) +\n  geom_boxplot()"
  },
  {
    "objectID": "ggplot2.html#scatterplot-1",
    "href": "ggplot2.html#scatterplot-1",
    "title": "A Grammar of Graphics",
    "section": "Scatterplot",
    "text": "Scatterplot\n\n\nCode\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#density-2d",
    "href": "ggplot2.html#density-2d",
    "title": "A Grammar of Graphics",
    "section": "Density 2D",
    "text": "Density 2D\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_density2d()"
  },
  {
    "objectID": "ggplot2.html#aesthetics",
    "href": "ggplot2.html#aesthetics",
    "title": "A Grammar of Graphics",
    "section": "Aesthetics",
    "text": "Aesthetics"
  },
  {
    "objectID": "ggplot2.html#mapping-vs-setting",
    "href": "ggplot2.html#mapping-vs-setting",
    "title": "A Grammar of Graphics",
    "section": "Mapping vs setting",
    "text": "Mapping vs setting\nMapping\n\nggplot(data, aes(x = Var1, y = Var2, size = Var3, colour = Var4))\n\n\nSetting\n\nggplot(data, colour = \"red\", alpha = 0.1, size = 4)"
  },
  {
    "objectID": "ggplot2.html#raw-scatterplot",
    "href": "ggplot2.html#raw-scatterplot",
    "title": "A Grammar of Graphics",
    "section": "Raw scatterplot",
    "text": "Raw scatterplot\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#setting-alpha",
    "href": "ggplot2.html#setting-alpha",
    "title": "A Grammar of Graphics",
    "section": "Setting alpha",
    "text": "Setting alpha\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point(alpha = 0.3)"
  },
  {
    "objectID": "ggplot2.html#setting-size",
    "href": "ggplot2.html#setting-size",
    "title": "A Grammar of Graphics",
    "section": "Setting size",
    "text": "Setting size\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point(size = 0.5)"
  },
  {
    "objectID": "ggplot2.html#setting-color",
    "href": "ggplot2.html#setting-color",
    "title": "A Grammar of Graphics",
    "section": "Setting color",
    "text": "Setting color\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point(color = \"indianred\")"
  },
  {
    "objectID": "ggplot2.html#setting-shape",
    "href": "ggplot2.html#setting-shape",
    "title": "A Grammar of Graphics",
    "section": "Setting shape",
    "text": "Setting shape\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point(shape = 3)"
  },
  {
    "objectID": "ggplot2.html#mapping-color",
    "href": "ggplot2.html#mapping-color",
    "title": "A Grammar of Graphics",
    "section": "Mapping color",
    "text": "Mapping color\n\nggplot(ips, aes(x = ips, y = sd_ips, colour = secteur)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#maping-shape",
    "href": "ggplot2.html#maping-shape",
    "title": "A Grammar of Graphics",
    "section": "Maping shape",
    "text": "Maping shape\n\nggplot(dvf, aes(x = surface, y = prix)) +\n  geom_point(aes(shape = type))"
  },
  {
    "objectID": "ggplot2.html#mapping-and-setting",
    "href": "ggplot2.html#mapping-and-setting",
    "title": "A Grammar of Graphics",
    "section": "Mapping and setting",
    "text": "Mapping and setting\n\nggplot(dvf, aes(x = surface, y = prix)) +\n  geom_point(aes(shape = type), size = 3)"
  },
  {
    "objectID": "ggplot2.html#components",
    "href": "ggplot2.html#components",
    "title": "A Grammar of Graphics",
    "section": "Components",
    "text": "Components\n\n\ngeom\n\nhistogram\nviolin\nrug\nline\npoint\ntile\nsmooth\nraster\nand more…\n\n\nstat\n\ncount\ndensity\nsum\nidentity\nunique\nsummary\nfunction\nand more…\n\n\nposition\n\ndodge\njitter\nstack\nidentity\nand more…"
  },
  {
    "objectID": "ggplot2.html#geom_x",
    "href": "ggplot2.html#geom_x",
    "title": "A Grammar of Graphics",
    "section": "geom_X()",
    "text": "geom_X()\n\nggplot(deputes, aes(x = groupe_abrege)) +\n  geom_bar()"
  },
  {
    "objectID": "ggplot2.html#stat_x",
    "href": "ggplot2.html#stat_x",
    "title": "A Grammar of Graphics",
    "section": "stat_X()",
    "text": "stat_X()\n\nggplot(deputes, aes(x = groupe_abrege)) +\n  stat_count()"
  },
  {
    "objectID": "ggplot2.html#layer",
    "href": "ggplot2.html#layer",
    "title": "A Grammar of Graphics",
    "section": "layer()",
    "text": "layer()\n\nggplot(deputes, aes(x = groupe_abrege)) +\n  layer(geom = \"bar\", stat = \"count\", position = \"identity\")"
  },
  {
    "objectID": "ggplot2.html#exploring-combinations",
    "href": "ggplot2.html#exploring-combinations",
    "title": "A Grammar of Graphics",
    "section": "Exploring combinations",
    "text": "Exploring combinations\n\nggplot(deputes, aes(x = groupe_abrege)) +\n  layer(geom = \"point\", stat = \"count\", position = \"identity\")"
  },
  {
    "objectID": "ggplot2.html#point",
    "href": "ggplot2.html#point",
    "title": "A Grammar of Graphics",
    "section": "point",
    "text": "point\n\nggplot(dvf, aes(x = surface, y = prix)) +\n  geom_point()"
  },
  {
    "objectID": "ggplot2.html#point-smooth",
    "href": "ggplot2.html#point-smooth",
    "title": "A Grammar of Graphics",
    "section": "point + smooth",
    "text": "point + smooth\n\nggplot(dvf, aes(x = surface, y = prix)) +\n  geom_point() + geom_smooth()"
  },
  {
    "objectID": "ggplot2.html#point-smooth-rug",
    "href": "ggplot2.html#point-smooth-rug",
    "title": "A Grammar of Graphics",
    "section": "point + smooth + rug",
    "text": "point + smooth + rug\n\nggplot(dvf, aes(x = surface, y = prix)) +\n  geom_point() + geom_smooth() + geom_rug()"
  },
  {
    "objectID": "ggplot2.html#color-aesthetic",
    "href": "ggplot2.html#color-aesthetic",
    "title": "A Grammar of Graphics",
    "section": "Color aesthetic",
    "text": "Color aesthetic\n\nggplot(data = dvf, mapping = aes(x = surface, y = prix,\n                                 colour = type)) +\n  geom_point(size = 3)"
  },
  {
    "objectID": "ggplot2.html#scale-color-manual",
    "href": "ggplot2.html#scale-color-manual",
    "title": "A Grammar of Graphics",
    "section": "Scale color manual",
    "text": "Scale color manual\n\nggplot(data = dvf, mapping = aes(x = surface, y = prix, colour = type)) +\n  geom_point(size = 3) +\n  scale_color_manual(values = c(\"Maison\" = \"red\", \"Appartement\" = \"darkblue\"))"
  },
  {
    "objectID": "ggplot2.html#scale-color-viridis",
    "href": "ggplot2.html#scale-color-viridis",
    "title": "A Grammar of Graphics",
    "section": "Scale color viridis",
    "text": "Scale color viridis\n\nggplot(data = dvf, mapping = aes(x = surface, y = prix, colour = type)) +\n  geom_point(size = 3) +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "ggplot2.html#cartesian-coordinates",
    "href": "ggplot2.html#cartesian-coordinates",
    "title": "A Grammar of Graphics",
    "section": "Cartesian coordinates",
    "text": "Cartesian coordinates\n\nggplot(ips, aes(x = \"write anything\", fill = secteur)) +\n  geom_bar()"
  },
  {
    "objectID": "ggplot2.html#polar-coordinates",
    "href": "ggplot2.html#polar-coordinates",
    "title": "A Grammar of Graphics",
    "section": "Polar coordinates",
    "text": "Polar coordinates\n\nggplot(ips, aes(y = \"write anything\", fill = secteur)) +\n  geom_bar() +\n  coord_polar()"
  },
  {
    "objectID": "ggplot2.html#spatial-data",
    "href": "ggplot2.html#spatial-data",
    "title": "A Grammar of Graphics",
    "section": "Spatial data",
    "text": "Spatial data\n\n\nSimple feature collection with 257 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.65187\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                      CNTR_NAME                       geometry\n1      الإمارات العربية المتحدة MULTIPOLYGON (((56.35462 25...\n2           افغانستان-افغانستان MULTIPOLYGON (((74.7055 37....\n3           Antigua and Barbuda MULTIPOLYGON (((-61.80237 1...\n4                      Anguilla MULTIPOLYGON (((-63.05444 1...\n5                     Shqipëria MULTIPOLYGON (((19.831 42.4...\n6                      Հայաստան MULTIPOLYGON (((46.45984 39...\n7                        Angola MULTIPOLYGON (((23.83831 -1...\n8                     Argentina MULTIPOLYGON (((-62.87957 -...\n9  American Samoa-Sāmoa Amelika MULTIPOLYGON (((-169.3966 -...\n10                   Österreich MULTIPOLYGON (((16.88365 48..."
  },
  {
    "objectID": "ggplot2.html#cartographic-coordinates",
    "href": "ggplot2.html#cartographic-coordinates",
    "title": "A Grammar of Graphics",
    "section": "Cartographic coordinates",
    "text": "Cartographic coordinates\n\nggplot(countries) +\n  geom_sf(fill = \"black\") +\n  coord_sf(crs = \"ESRI:54030\")"
  },
  {
    "objectID": "ggplot2.html#another-one",
    "href": "ggplot2.html#another-one",
    "title": "A Grammar of Graphics",
    "section": "Another one",
    "text": "Another one\n\nggplot(countries) +\n  geom_sf(fill = \"black\") +\n  coord_sf(crs = \"+proj=bonne +lat_1=10\")"
  },
  {
    "objectID": "ggplot2.html#first-example",
    "href": "ggplot2.html#first-example",
    "title": "A Grammar of Graphics",
    "section": "First example",
    "text": "First example\n\nggplot(ips, aes(x = ips, y = sd_ips)) +\n  geom_point() +\n  facet_wrap(~secteur)"
  },
  {
    "objectID": "ggplot2.html#meaningful-example",
    "href": "ggplot2.html#meaningful-example",
    "title": "A Grammar of Graphics",
    "section": "Meaningful example",
    "text": "Meaningful example\n\n\nCode\nd = fs::path_home(\"these\", \"data\", \"eec\") |&gt; \n  arrow::open_dataset() |&gt; \n  filter(rgi == 1,\n         !is.na(acteu)) |&gt; \n  select(sexe, ag, acteu, csp, csa, santgen) |&gt; \n  mutate(cs = coalesce(csp, csa),\n         cs = if_else(cs %in% c(\"10\", \"11\", \"12\", \"13\"), \"10\", cs)) |&gt;\n  collect()\n\nd |&gt; \n  filter(between(ag, 20, 80)) |&gt; \n  group_by(ag, cs, santgen) |&gt; \n  summarise(n = n()) |&gt; \n  mutate(pct = n / sum(n)) |&gt; \n  ungroup() |&gt; \n  pivot_wider(names_from = santgen, values_from = c(pct, n), values_fill = 0) |&gt; \n  mutate(good = pct_1 + pct_2) |&gt; \n  select(ag, cs, good) |&gt; \n  ggplot() +\n  geom_smooth(aes(x = ag, y = good)) +\n  facet_wrap(~cs) +\n  labs(x = \"\",\n       y = \"Proportion de personnes en bonne santé\") +\n  theme_bw()"
  },
  {
    "objectID": "ggplot2.html#a-plot-to-dress-up",
    "href": "ggplot2.html#a-plot-to-dress-up",
    "title": "A Grammar of Graphics",
    "section": "A plot to dress up",
    "text": "A plot to dress up\n\n\nCode\nggplot(ips, aes(y = forcats::fct_reorder(str_to_title(academie), ips),\n                    x = ips)) +\n  stat_summary(fun = \"median\", geom = \"point\") +\n  coord_cartesian(xlim = c(60, NA))"
  },
  {
    "objectID": "ggplot2.html#labs",
    "href": "ggplot2.html#labs",
    "title": "A Grammar of Graphics",
    "section": "labs()",
    "text": "labs()\n\n\nCode\nggplot(ips, aes(y = forcats::fct_reorder(str_to_title(academie), ips),\n                    x = ips)) +\n  stat_summary(fun = \"median\", geom = \"point\") +\n  coord_cartesian(xlim = c(60, NA)) +\n  labs(x = \"Indice de position sociale\",\n       y = \"\",\n       title = \"Position sociale des académies\",\n       subtitle = \"Pour la rentrée 2021-2022\",\n       caption = \"Données : Indice de position sociale des collèges\")"
  },
  {
    "objectID": "ggplot2.html#save-typing",
    "href": "ggplot2.html#save-typing",
    "title": "A Grammar of Graphics",
    "section": "Save typing",
    "text": "Save typing\n\np = ggplot(ips, \n           aes(y = forcats::fct_reorder(str_to_title(academie), ips),\n               x = ips)) +\n  stat_summary(fun = \"median\", geom = \"point\") +\n  coord_cartesian(xlim = c(60, NA)) +\n  labs(x = \"Indice de position sociale\",\n       y = \"\",\n       title = \"Position sociale des académies\",\n       subtitle = \"Pour la rentrée 2021-2022\",\n       caption = \"Données : Indice de position sociale des collèges\")"
  },
  {
    "objectID": "ggplot2.html#grey-default",
    "href": "ggplot2.html#grey-default",
    "title": "A Grammar of Graphics",
    "section": "Grey (default)",
    "text": "Grey (default)\n\np + theme_grey()"
  },
  {
    "objectID": "ggplot2.html#classic",
    "href": "ggplot2.html#classic",
    "title": "A Grammar of Graphics",
    "section": "Classic",
    "text": "Classic\n\np + theme_classic()"
  },
  {
    "objectID": "ggplot2.html#minimal",
    "href": "ggplot2.html#minimal",
    "title": "A Grammar of Graphics",
    "section": "Minimal",
    "text": "Minimal\n\np + theme_minimal()"
  },
  {
    "objectID": "ggplot2.html#wsj",
    "href": "ggplot2.html#wsj",
    "title": "A Grammar of Graphics",
    "section": "WSJ",
    "text": "WSJ\n\np + ggthemes::theme_wsj()"
  },
  {
    "objectID": "ggplot2.html#recap",
    "href": "ggplot2.html#recap",
    "title": "A Grammar of Graphics",
    "section": "Recap",
    "text": "Recap\n\n\nData\nAesthetics\nScales\nCoordinate systems\nThemes"
  },
  {
    "objectID": "ggplot2.html#advantages",
    "href": "ggplot2.html#advantages",
    "title": "A Grammar of Graphics",
    "section": "Advantages",
    "text": "Advantages\n\nReproducibility\nNot just a collection of special cases\nGraphs built incrementally\nSame tool for exploratory analysis and communication\nHigh level of control\nEncourages custom-made graphics\nEasy to extend"
  },
  {
    "objectID": "programme/correspondances.html",
    "href": "programme/correspondances.html",
    "title": "Correspondances",
    "section": "",
    "text": "Quelle surprise ! Votre questionnaire est un succès. Des milliers de personnes ont accepté de répondre à vos dizaines de questions. Maintenant les ennuis commencent, les tris croisés s’accumulent. Trop, c’est trop, vous voudriez n’avoir posé que deux questions. N’y a-t-il pas un moyen de résumer l’information ? Il y en a plusieurs. D’abord, vous pouvez “réduire la dimensionnalité”, en construisant des variables synthétiques à partir de l’information d’origine. Et puis vous pouvez grouper vos individus, en fonction des réponses qu’ils ont données. Nous verrons comment faire successivement l’un et l’autre, comment interpréter les résultats, et comment les communiquer. Que faire des données manquantes ? Pourquoi faut-il se méfier des modalités peu fréquentes ? Combien de classes choisir pour le partitionnement ? Une enquête sur le premier confinement français animera ces questions techniques."
  },
  {
    "objectID": "programme/couleurs.html",
    "href": "programme/couleurs.html",
    "title": "Couleurs du continu",
    "section": "",
    "text": "Vous êtes face à un taux, une proportion, un pourcentage, un ratio quelconque, qui varie spatialement. Taux d’abstention, taux de chômage, densité de population. Une carte s’impose. La couleur s’invite. Vous imaginez déjà un camaïeu de bleu, des transitions invisibles qui portent insensiblement l’œil des teintes les plus claires aux plus sombres. C’est d’ailleurs ce que par défaut votre logiciel vous propose. Et c’est une très mauvaise idée. Pour être efficace, votre carte a besoin de discontinuité. Il faudra, sans états d’âme, découper votre variable en tranches, ce qu’on appelle la discrétisation. Selon la distribution de vos données et les objectifs que vous poursuivez, vous pourrez piocher parmi une dizaine d’approches et d’algorithmes. Au cours de cette séance, on parlera également palettes de couleurs, inclusion, données manquantes et valeurs extrêmes. Deux enquêtes nous accompagneront : sur le nuage de Tchernobyl et la vie électorale française."
  },
  {
    "objectID": "programme/emboitements.html",
    "href": "programme/emboitements.html",
    "title": "Emboîtements",
    "section": "",
    "text": "Toute boîte à outils incomplète vous fait courir un risque : transformer l’or en plomb. Au fondement des modèles statistiques couramment enseignés, il y a une hypothèse forte : vos observations sont indépendantes. Dans la pratique, il arrive fréquemment que cette condition ne se vérifie pas. Et c’est une bonne chose. Les données de panel, par exemple, qui contiennent pour chaque individu de multiples observations, sont d’une grande richesse. En les abordant avec des outils standards, non seulement vous passerez à côté de leur potentiel, mais vous obtiendrez souvent des résultats bizarres ou contre-intuitifs. Fort heureusement, il existe des modèles taillés sur mesure pour ce genre de données. On les appelle, selon les cas : hierarchichal, mixed effects, multilevel, ou random effects models. Le principe en est très simple, les avantages immédiatement visibles. On en présentera de nombreux cas d’application, et on montrera comment les mettre en oeuvre dans un cadre bayésien."
  },
  {
    "objectID": "programme/styles.html",
    "href": "programme/styles.html",
    "title": "Styles",
    "section": "",
    "text": "Autour de vous s’amoncellent des témoignages, des lettres, des journaux intimes. Vous croulez sous une masse d’écrits du for privé. Deux solutions s’offrent à vous : picorer dans cette masse, citer ce qui vous plaît, délaisser ce qui vous dérange ; ou prendre tout, sans distinction, et vous laisser surprendre. Cette séance part d’une enquête sur l’expérience de la Première Guerre Mondiale, à travers les correspondances de paysans, d’ouvriers, d’instituteurs et d’écrivains. La question qu’on se posera est simple : la façon d’écrire la guerre reflète-t-elle la manière de la vivre ? Le style peut-il être une fenêtre sur l’expérience ? Dans la rubrique terre à terre : comment transformer un carton de lettres en base de données ? Comment assigner automatiquement une classe grammaticale à chaque mot d’un texte ? Comment caractériser, par des indicateurs simples, le style d’un scripteur ? Comment organiser les va-et-vient entre lecture immergée et lecture à distance ? Quelles représentations graphiques inventer pour stimuler l’interprétation ?"
  }
]